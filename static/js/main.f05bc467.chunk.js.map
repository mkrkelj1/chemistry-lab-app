{"version":3,"sources":["assets/markdown/courses sync //.md$","assets/home sync nonrecursive //.jpg$","assets/home/beakers1.jpg","assets/home/beakers2.jpg","assets/home/molecule1.jpg","assets/home/molecule2.jpg","assets/images sync nonrecursive //.png$","assets/markdown/courses/1_course/notebook/notebook.md","assets/markdown/courses/1_course/regulations/regulations.md","assets/markdown/courses/2_course/notebook/notebook.md","assets/markdown/courses/2_course/regulations/regulations.md","assets/images/Dehydration_PeakMathChart.png","assets/images/Dehydration_PeakPercentageChart.png","assets/images/Dehydration_Scheme.png","assets/images/Dehydration_prelabchart.png","assets/images/Distillation_SampleTable.png","assets/images/Distillation_Temp.png","assets/images/Extractionof2Unknowns_AcidBaseChart.png","assets/images/Extractionof2Unknowns_FlowChart.png","assets/images/Extractionof2Unknowns_K.png","assets/images/Extractionof2Unknowns_StudyQuestions_2.png","assets/images/Extractionsof2Unknowns_StudyQuestions.png","assets/images/Identification_Background_MeltingCurve.png","assets/images/Identification_PrelabTable.png","assets/images/Isomerization_SchemeBreakdown.png","assets/images/Isomerization_SchemeOverview.png","assets/images/Isomerization_TLCPlate.png","assets/images/TrimiristinExtraction_SolubilityTable_StudyQuestion.png","assets/images/TrymiristinExtraction_solubilitytable.png","assets/pictograms sync /^/.//.*$","assets/pictograms/GHS_01_Explosive.png","assets/pictograms/GHS_02_Flammable.png","assets/pictograms/GHS_03_Oxidising.png","assets/pictograms/GHS_04_Compressed.png","assets/pictograms/GHS_05_Corrosion.png","assets/pictograms/GHS_06_Skull.png","assets/pictograms/GHS_07_Exclamation.png","assets/pictograms/GHS_08_Health-Hazard.png","assets/pictograms/GHS_09_Environment.png","assets/pictograms/README_PICTOGRAMS.txt","components/home/HomeImagePlaceholders.js","components/NavigationBar.js","components/Header.js","components/home/HomeHeading.js","components/home/HomeVideoTutorials.js","components/home/HomeSeeAllVideosButton.js","components/home/HomeCourseButtons.js","components/home/Home.js","api.js","components/course/Courses.js","components/course/CourseHeading.js","components/course/CourseCurrent.js","components/course/CourseCanvasButtons.js","components/course/CourseExperimentSchedule.js","components/course/CourseNotebooksReports.js","components/course/CourseLabRegulations.js","components/course/CourseBreadcrumb.js","components/course/Course.js","components/experiment/Experiments.js","components/experiment/ExperimentBreadcrumb.js","content/Experiment_1.js","content/Experiment_2.js","content/Experiment_3.js","content/Experiment_4.js","content/Experiment_5.js","content/Experiment_6.js","content/Experiment_7.js","content/Experiment_8.js","content/Experiment_9.js","content/Experiment_10.js","content/Experiment_11.js","content/Experiment_12.js","ContentAPI.js","components/experiment/ExperimentProcedureTabs.js","components/experiment/ExperimentCard.js","components/experiment/ExperimentChemicalsCard.js","components/experiment/ExperimentCards.js","components/experiment/Experiment.js","components/Routes.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","r","navs","route","location","icon","faHome","faAtom","faHandPaper","faVideo","item","className","to","Link","href","NavigationBar","Brand","Header","HomeHeading","cache","require","forEach","key","imagesArr","image_style","height","width","imgCol","image","xs","md","style","src","rounded","HomeImagePlaceholders","HomeVideoTutorials","HomeSeeAllVideosButton","display","justifyContent","variant","block","HomeCourseButtons","Home","Fragment","CardsAPI","cards","all","this","ChemicalsAPI","chemicals","get","chemicalID","find","c","filtered","filterArray","filter","chemical","includes","CoursesAPI","courses","ExperimentsAPI","experiments","courseID","sort","a","b","Date","startDate","obj","i","order","courseId","experimentId","experimentID","ordered","endDate","PictogramsAPI","pictograms","pictogram","pictogramID","pictogramMap","_pictogramMap","pictogram_ids","pictogram_arr","pictogram_id","push","Courses","name","CourseHeading","course","dayjs","extend","isBetween","CourseCurrent","between","_today","_start","_end","getCurrent","currentExperiment","indexOf","cols","section","CourseCanvasButtons","CourseExperimentSchedule","cardId","useState","open","setOpen","renderDate","date","format","onClick","aria-controls","aria-expanded","as","state","iconDown","faChevronDown","iconUp","faChevronUp","iconToggle","in","Body","importAll","CourseNotebooksReports","markdown","setValue","useEffect","path","fetch","then","res","text","fetchData","source","escapeHtml","CourseLabRegulations","CourseBreadcrumb","Item","active","Course","props","_course","parseInt","match","params","_courseId","Experiments","_courseID","ExperimentBreadcrumb","experiment","start","end","Experiment_1","prelab_assignment","alt","background","procedure","results","study_questions","discussion","waste_disposal","Experiment_2","Experiment_3","marginLeft","type","class","Experiment_4","Experiment_5","Experiment_6","Experiment_7","Experiment_8","Experiment_9","Experiment_10","Experiment_11","Experiment_12","contentMap","1","2","3","4","5","6","7","experimentMap","8","9","10","11","12","Content","contentId","ExperimentProcedureTabs","cardContent","header","setKey","tabs","content","index","eventKey","title","marginTop","fill","justify","activeKey","onSelect","k","ExperimentCard","card","Id","ExperimentChemicalsCard","cardID","chemicalCard","Title","Subtitle","cas","Text","safety_guideline","Img","filename","imageElements","ExperimentCards","_cards","_chemicals","chemical_ids","ExpChemCard","splice","Experiment","_experimentId","_experiment","exp","Routes","exact","component","Main","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f05bc467.chunk.js","sourcesContent":["var map = {\n\t\"./1_course/notebook/notebook.md\": 295,\n\t\"./1_course/regulations/regulations.md\": 296,\n\t\"./2_course/notebook/notebook.md\": 297,\n\t\"./2_course/regulations/regulations.md\": 298\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 111;","var map = {\n\t\"./beakers1.jpg\": 160,\n\t\"./beakers2.jpg\": 161,\n\t\"./molecule1.jpg\": 162,\n\t\"./molecule2.jpg\": 163\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 159;","module.exports = __webpack_public_path__ + \"static/media/beakers1.97912d7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beakers2.97912d7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/molecule1.2cdf56dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/molecule2.2cdf56dd.jpg\";","var map = {\n\t\"./Dehydration_PeakMathChart.png\": 300,\n\t\"./Dehydration_PeakPercentageChart.png\": 301,\n\t\"./Dehydration_Scheme.png\": 302,\n\t\"./Dehydration_prelabchart.png\": 303,\n\t\"./Distillation_SampleTable.png\": 304,\n\t\"./Distillation_Temp.png\": 305,\n\t\"./Extractionof2Unknowns_AcidBaseChart.png\": 306,\n\t\"./Extractionof2Unknowns_FlowChart.png\": 307,\n\t\"./Extractionof2Unknowns_K.png\": 308,\n\t\"./Extractionof2Unknowns_StudyQuestions_2.png\": 309,\n\t\"./Extractionsof2Unknowns_StudyQuestions.png\": 310,\n\t\"./Identification_Background_MeltingCurve.png\": 311,\n\t\"./Identification_PrelabTable.png\": 312,\n\t\"./Isomerization_SchemeBreakdown.png\": 313,\n\t\"./Isomerization_SchemeOverview.png\": 314,\n\t\"./Isomerization_TLCPlate.png\": 315,\n\t\"./TrimiristinExtraction_SolubilityTable_StudyQuestion.png\": 316,\n\t\"./TrymiristinExtraction_solubilitytable.png\": 317\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/notebook.09185b2f.md\";","module.exports = __webpack_public_path__ + \"static/media/regulations.56b5d0d8.md\";","module.exports = __webpack_public_path__ + \"static/media/notebook.09185b2f.md\";","module.exports = __webpack_public_path__ + \"static/media/regulations.56b5d0d8.md\";","module.exports = __webpack_public_path__ + \"static/media/Dehydration_PeakMathChart.ba4d6988.png\";","module.exports = __webpack_public_path__ + \"static/media/Dehydration_PeakPercentageChart.ffc4d9f6.png\";","module.exports = __webpack_public_path__ + \"static/media/Dehydration_Scheme.f72be874.png\";","module.exports = __webpack_public_path__ + \"static/media/Dehydration_prelabchart.481d7750.png\";","module.exports = __webpack_public_path__ + \"static/media/Distillation_SampleTable.6b134f14.png\";","module.exports = __webpack_public_path__ + \"static/media/Distillation_Temp.a2d4b912.png\";","module.exports = __webpack_public_path__ + \"static/media/Extractionof2Unknowns_AcidBaseChart.230efa63.png\";","module.exports = __webpack_public_path__ + \"static/media/Extractionof2Unknowns_FlowChart.d001eaf1.png\";","module.exports = __webpack_public_path__ + \"static/media/Extractionof2Unknowns_K.da637f73.png\";","module.exports = __webpack_public_path__ + \"static/media/Extractionof2Unknowns_StudyQuestions_2.b94228a9.png\";","module.exports = __webpack_public_path__ + \"static/media/Extractionsof2Unknowns_StudyQuestions.9200ef2d.png\";","module.exports = __webpack_public_path__ + \"static/media/Identification_Background_MeltingCurve.b0b9e318.png\";","module.exports = __webpack_public_path__ + \"static/media/Identification_PrelabTable.de9142e2.png\";","module.exports = __webpack_public_path__ + \"static/media/Isomerization_SchemeBreakdown.f1cdf560.png\";","module.exports = __webpack_public_path__ + \"static/media/Isomerization_SchemeOverview.552cd2b7.png\";","module.exports = __webpack_public_path__ + \"static/media/Isomerization_TLCPlate.7815e9ce.png\";","module.exports = __webpack_public_path__ + \"static/media/TrimiristinExtraction_SolubilityTable_StudyQuestion.dafa1809.png\";","module.exports = __webpack_public_path__ + \"static/media/TrymiristinExtraction_solubilitytable.582f2992.png\";","var map = {\n\t\"./GHS_01_Explosive.png\": 321,\n\t\"./GHS_02_Flammable.png\": 322,\n\t\"./GHS_03_Oxidising.png\": 323,\n\t\"./GHS_04_Compressed.png\": 324,\n\t\"./GHS_05_Corrosion.png\": 325,\n\t\"./GHS_06_Skull.png\": 326,\n\t\"./GHS_07_Exclamation.png\": 327,\n\t\"./GHS_08_Health-Hazard.png\": 328,\n\t\"./GHS_09_Environment.png\": 329,\n\t\"./README_PICTOGRAMS.txt\": 330\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 320;","module.exports = __webpack_public_path__ + \"static/media/GHS_01_Explosive.480eb65c.png\";","module.exports = __webpack_public_path__ + \"static/media/GHS_02_Flammable.5e788240.png\";","module.exports = __webpack_public_path__ + \"static/media/GHS_03_Oxidising.5d14ed30.png\";","module.exports = __webpack_public_path__ + \"static/media/GHS_04_Compressed.bfa9652d.png\";","module.exports = __webpack_public_path__ + \"static/media/GHS_05_Corrosion.d8f40bad.png\";","module.exports = __webpack_public_path__ + \"static/media/GHS_06_Skull.817e3d13.png\";","module.exports = __webpack_public_path__ + \"static/media/GHS_07_Exclamation.d0cd3eb7.png\";","module.exports = __webpack_public_path__ + \"static/media/GHS_08_Health-Hazard.5e39f741.png\";","module.exports = __webpack_public_path__ + \"static/media/GHS_09_Environment.e28e8279.png\";","module.exports = __webpack_public_path__ + \"static/media/README_PICTOGRAMS.232875d4.txt\";","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\n\nimportAll(require.context(\"../../assets/home/\", false, /\\.jpg$/));\n\nconst imagesArr = Object.keys(cache);\n\nconst image_style = { height: \"10rem\", width: \"10rem\" };\nconst imgCol = imagesArr.map(image => (\n  <Col xs={6} md={3}>\n    <Image style={image_style} src={cache[image]} rounded />\n  </Col>\n));\n\nconst HomeImagePlaceholders = () => (\n  <Container className=\"p-1\">\n    <Row>{imgCol}</Row>\n  </Container>\n);\n\nexport default HomeImagePlaceholders;","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faHome, faAtom, faHandPaper, faVideo} from \"@fortawesome/free-solid-svg-icons\";\n// Exports to Header.js\n\nconst home = <FontAwesomeIcon icon={faHome} />;\nconst atom = <FontAwesomeIcon icon={faAtom} />;\nconst hand = <FontAwesomeIcon icon={faHandPaper} />;\nconst video = <FontAwesomeIcon icon={faVideo} />;\n\nconst navArr = [\n  { route: \"/\", location: \"Home\", icon: home },\n  { route: \"/courses\", location: \"Courses\", icon: atom },\n  { route: \"/videos\", location: \"Videos\", icon: hand },\n  { route: \"/safety\", location: \"Safety\", icon: video }\n];\n\nconst navs = navArr.map(item => (\n  <div className=\"anav\" >\n  <LinkContainer to={item.route} >\n    <Nav.Link href=\"#\" >\n      <a href=\"#\" > \n        <div className=\"icon-div\">{item.icon}</div>\n        {item.location}\n      </a>\n    </Nav.Link>\n  </LinkContainer>\n  </div>\n));\n\nconst NavigationBar = () => (\n  <Navbar className=\"justify-content-between\">\n    <Navbar.Brand>Organic Chemistry at Barnard</Navbar.Brand>\n    <Nav className=\"a.nav\">{navs}</Nav>\n  </Navbar>\n);\n\nexport default NavigationBar;\n","import React from 'react'\nimport NavigationBar from './NavigationBar'\n\n// Exports to App.js\nconst Header = () => (\n  <header>\n    <NavigationBar />\n  </header>\n)\n\nexport default Header","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\n\n// Export to Home.js\nconst HomeHeading = () => (\n\t<Container className=\"p-1\">\n\t\t<h2>Barnard Organic Chemistry Laboratory</h2>\n\t\t<p>\n\t\t\tWelcome Text goes here. \n\t\t\tLorem Impsum dolor amet kickstarter before\n\t\t</p>\n\n\t\t<h2>For Fall 2019 Students</h2>\n\t\t<p>View this week's experiment, your lab manual, and other course information</p>\n\t</Container>\n);\n\nexport default HomeHeading;","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\n\nconst HomeVideoTutorials = () => (\n    <Container className=\"p-1\">\n      <h2>Video Tutorials</h2>\n      <p>Learn lab techniques and more</p>\n    </Container>\n);\n\nexport default HomeVideoTutorials;","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\n\nconst HomeSeeAllVideosButton = () => (\n  \n    <Container className=\"p-1\">\n      <div style={{display: 'flex', justifyContent: 'center'}}>\n      <Button variant=\"secondary\" href=\"#\" block>\n        See All Video Tutorials\n      </Button>\n      </div>\n    </Container>\n  \n);\n\nexport default HomeSeeAllVideosButton;","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\n\nconst HomeCourseButtons = () => (\n    <Container className=\"p-1\">\n\t    <row>\n\t\t\t<Col >\n\t\t\t\t<Button variant = \"primary\"  >\n\t\t\t \t\tIntroduction to Organic Chemistry\n\t\t\t \t</Button>\n\n\t\t\t \t\t<Button variant = \"primary\"  >\n\t\t\t \t\tModern Techniques of Organic Chemistry\n\t\t\t \t</Button>\n\t\t\t </Col>\n\t\t</row>\n    </Container>\n);\n\nexport default HomeCourseButtons;","import React from 'react'\nimport HomeHeading from './HomeHeading'\nimport HomeImagePlaceholders from './HomeImagePlaceholders'\nimport HomeVideoTutorials from './HomeVideoTutorials'\nimport HomeSeeAllVideosButton from './HomeSeeAllVideosButton'\nimport HomeCourseButtons from './HomeCourseButtons'\n\n//<CourseLinkButtons />\nconst Home = () => (\n\t<React.Fragment>\n\t    <HomeHeading />\n\t    <HomeCourseButtons />\n    \t<HomeVideoTutorials />\n    \t<HomeImagePlaceholders />\n    \t<HomeSeeAllVideosButton />\n    </React.Fragment>\n)\n\nexport default Home","import cards from './data/cards.json';\nimport chemicals from './data/chemicals.json';\nimport courses from './data/courses.json';\nimport experiments from './data/experiments.json'\nimport pictograms from './data/pictograms.json'\nimport procedures from './data/procedures.json'\n\n// Remame this file to DataAPI\nconst CardsAPI = {\n  cards: cards,\n  \n  all: function() {\n    return this.cards;\n  }\n};\n\n\nconst ChemicalsAPI = {\n  chemicals: chemicals,\n  \n  all: function() {\n    return this.chemicals;\n  },\n\n  get: function(chemicalID) {\n    const isChemical = c => c.chemicalID === chemicalID;\n    return this.chemicals.find(isChemical);\n  },\n\n  filtered: function(filterArray) {\n    const Chemicals = this.chemicals;\n    const filteredChemicals = Chemicals.filter(function(chemical) {\n      return filterArray.includes(chemical.chemicalID);\n    });\n    return filteredChemicals;\n  }\n};\n\n\nconst CoursesAPI = {\n  courses: courses,\n  all: function() {\n    return this.courses;\n  },\n\n  get: function(id) {\n    const isCourse = c => c.id === id;\n    return this.courses.find(isCourse);\n  }\n};\n\n\nconst ExperimentsAPI = {\n  // May need to add new primary key\n  // experimentID --> might duplicate due to multiple weeks\n  // Weeks --> might be better to call them \"parts\"\n  experiments: experiments,\n\n  all: function(courseID) {\n    return this.experiments;\n  },\n\n  filtered: function(courseID) {\n    const _experiments = this.experiments.filter(e => e.courseID === courseID);\n    const _experimentsOrdered = _experiments.sort(function(a, b) {\n      return new Date(a.startDate) - new Date(b.startDate);\n    });\n    return _experimentsOrdered.map((obj, i) => ({ ...obj, order: i + 1 }))\n  },\n\n  get: function(courseId, experimentId) {\n    const isExperiment = e => e.experimentID === experimentId && e.courseID === courseId;\n    return this.experiments.find(isExperiment);\n  },\n\n  ordered: function(courseID) {\n    const _experiments = this.experiments.filter(e => e.courseID === courseID);\n    const _experimentsOrdered = _experiments.sort(function(a, b) {\n      return new Date(b.endDate) - new Date(a.endDate);\n    });\n    const ordered = _experimentsOrdered.map((obj, i) => ({ ...obj, order: i + 1 }))\n    return ordered\n  }\n};\n\n\nconst ProceduresAPI = {\n  procedures: procedures,\n\n  all: function() {\n    return this.procedures;\n  },\n\n  filtered: function(experimentID) {\n    return this.procedures.filter(e => e.experimentID === experimentID);\n  }\n};\n\n\nconst PictogramsAPI = {\n  \n  pictograms: pictograms,\n\n  all: function() { \n    return this.pictograms\n  },\n\n  filtered: function(filterArray) {\n    const Pictograms = this.pictograms\n    const filteredPictograms = Pictograms.filter(function (pictogram) {\n      return filterArray.includes(pictogram.pictogramID)\n    });\n    return filteredPictograms\n  },\n\n  pictogramMap: function (chemicals) {\n    const pictograms = this.pictograms\n    const _pictogramMap = {}\n\n    chemicals.forEach(function (chemical) {\n      const pictogram_ids = chemical.pictogram_ids\n      const pictogram_arr = []\n\n      pictogram_ids.forEach(function (pictogram_id) {\n        const pictogram = pictograms.find(({ pictogramID }) => pictogramID === pictogram_id)\n        pictogram_arr.push(pictogram)\n        _pictogramMap[chemical.chemicalID] = pictogram_arr\n      });\n    });\n    return _pictogramMap\n  }\n}\n\n\nconst ScheduleAPI = {\n  // https://stackoverflow.com/questions/16590500/javascript-calculate-date-from-week-number\n\n  schedule: [{'id': 1, 'dateStart': '1/22', 'dateEnd': '1'}],\n\n\n  get_date: function (w, y) {\n    var simple = new Date(Date.UTC(y, 0, 1 + (w - 1) * 7));\n    var dow = simple.getDay();\n    var ISOweekStart = simple;\n    if (dow <= 4)\n      ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\n    else\n      ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\n    return ISOweekStart;\n  }\n}\n\n\n\n\n\nexport { CardsAPI, CoursesAPI, ExperimentsAPI, ProceduresAPI, ChemicalsAPI, PictogramsAPI }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport { CoursesAPI }  from '../../api'\nimport { Link } from 'react-router-dom'\n\n\nconst Courses = () => (\n  <div>\n    <ul>\n      {CoursesAPI.all().map(c => (\n        <li key={c.id}>\n          <Link to={`/courses/${c.id}`}>{c.name}</Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Courses","import React from \"react\";\n\n// Exports: Course.js\nconst CourseHeading = ({ course }) => {\n  return (\n    <div className=\"p-1\">\n      <h1> {course.name} </h1>\n      <p>Some text can go here to help with context</p>\n    </div>\n  );\n};\n\nexport default CourseHeading;","import React from \"react\";\nimport { ExperimentsAPI } from \"../../api\";\nimport { NavLink } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport isBetween from \"dayjs/plugin/isBetween\";\nimport Alert from \"react-bootstrap/Alert\";\ndayjs.extend(isBetween);\n// Exports: Course.js\n\n\nconst getCurrent = (startDate, endDate) => {\n  const _today = dayjs();\n  const _start = dayjs(startDate);\n  const _end = dayjs(endDate);\n  return _today.isBetween(_start, _end);\n};\n\n\nconst CourseCurrent = ({ courseId }) => {\n  const experiments = ExperimentsAPI.filtered(courseId);\n  const between = experiments.map(e => getCurrent(e.startDate, e.endDate));\n  const betweenIndex = between.indexOf(true);\n  const currentExperiment = experiments[betweenIndex];\n  const order = currentExperiment.order;\n\n\n  return (\n    <div className=\"p-1\">\n      <Alert className = \"call-out\" >\n        <em className = \"call-out-em\"> currently happening:</em>\n        <br />\n        <div className = \"call-out-experiment\">Experiment #{order}</div>\n        <br />      \n        <NavLink \n          className = \"call-out-link\" \n          to = {`${courseId}/experiments/${currentExperiment.experimentID}`}\n        > \n          {currentExperiment.name}\n        </NavLink>\n      </Alert>\n    </div>\n  );\n};\n\nexport default CourseCurrent;","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\n\nconst sections = [1, 2, 3, 4, 5, 6]\n\nconst cols = sections.map(section => (\n  <Col xs={4} md={2}><Button variant = \"primary\"  >Section {section}</Button></Col>\n));\n\nconst CourseCanvasButtons = () => {\n  return (\n      <div className=\"p-1\">\n        <strong>Canvas Pages</strong>\n        <Row className=\"max-width\">\n            {cols}\n        </Row>\n      </div>\n  );\n};\n\nexport default CourseCanvasButtons;","import React, { useState, useEffect } from \"react\";\nimport { ExperimentsAPI }  from '../../api'\nimport Card from \"react-bootstrap/Card\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\nimport dayjs from 'dayjs'\n// Exports to Course.js\n\n\nconst iconToggle = (state) => {\n  const iconDown = <FontAwesomeIcon icon={faChevronDown} />\n  const iconUp = <FontAwesomeIcon icon={faChevronUp} />\n  return state ? iconUp : iconDown\n};\n\nconst CourseExperimentSchedule = ({ courseId }) => {\n  const cardId = 'experiment-schedule-card-body'\n  const [markdown, setValue] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const renderDate = date => (dayjs(date).format(\"MM/DD\"))\n\n  const schedule = () => {\n    return ExperimentsAPI.filtered(courseId).map(e => (\n      <React.Fragment>\n        <li key={e.experimentID}>\n          {renderDate(e.startDate)}-{renderDate(e.endDate)}: &nbsp;\n          <Link to={`${courseId}/experiments/${e.experimentID}`}>{e.name}</Link>\n        </li>\n      </React.Fragment>\n    ));\n  };\n  \n  return (\n    <div className=\"p-1\">\n      <Card >\n        <Card.Header \n          onClick={ () => setOpen(!open) } \n          aria-controls = {cardId} \n          aria-expanded = {open} \n          as = \"h2\"\n          className = \"bg-transparent\"\n        >\n          Experiment Schedule\n\n          {iconToggle(open)}\n        \n        </Card.Header>\n        <Collapse in = { open } >\n          <div>\n          <Card.Body id = { cardId }>\n            <ul>\n              {schedule()}\n            </ul>\n          </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    </div>\n  );\n};\n\nexport default CourseExperimentSchedule;\n","import React, { useState, useEffect } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactMarkdown from \"react-markdown/with-html\"\nimport Collapse from \"react-bootstrap/Collapse\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\n\nconst cache = {};\n\nfunction importAll (r) {\n  r.keys().forEach(key => cache[key] = r(key));\n}\nimportAll(require.context(\"../../assets/markdown/courses/\", true, /\\.md$/));\n\n\nconst iconToggle = (state) => {\n  const iconDown = <FontAwesomeIcon icon={faChevronDown} />\n  const iconUp = <FontAwesomeIcon icon={faChevronUp} />\n  return state ? iconUp : iconDown\n};\n\n\n// Exports to Course.js\nconst CourseNotebooksReports = ({ courseId, location }) => {\n  const cardId = \"notebook-card-body\";\n  const [markdown, setValue] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      const file_root = \"./\" + courseId + \"_\" + \"course\" + \"/\"\n      const filename = location + '.md'\n      const filepath = file_root + location + \"/\" + filename\n      const path = cache[filepath]\n      const markdown = await fetch(path).then(res => res.text());\n      setValue(markdown);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"p-1\">\n      <Card>\n        <Card.Header \n          onClick={() => setOpen(!open)} \n          aria-controls={cardId} \n          aria-expanded={open} \n          as = \"h2\"\n          className = \"bg-transparent\"\n        >\n          Notebooks and Reports\n          {iconToggle(open)}\n        </Card.Header>\n\n        <Collapse in={open}>\n        <div>\n          <Card.Body id={cardId}>\n            <ReactMarkdown source={markdown} escapeHtml={false} />\n          </Card.Body>\n          </div>\n        </Collapse>\n      </Card>\n    </div>\n  );\n};\n\nexport default CourseNotebooksReports;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport ReactMarkdown from \"react-markdown/with-html\"\nimport Collapse from \"react-bootstrap/Collapse\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\n// Exports to Course.js\n\nconst cache = {};\nfunction importAll (r) {\n  r.keys().forEach(key => cache[key] = r(key));\n}\nimportAll(require.context(\"../../assets/markdown/courses/\", true, /\\.md$/));\n\n\nconst iconToggle = (state) => {\n  const iconDown = <FontAwesomeIcon icon={faChevronDown} />\n  const iconUp = <FontAwesomeIcon icon={faChevronUp} />\n  return state ? iconUp : iconDown\n};\n\n\nconst CourseLabRegulations = ({ courseId, location }) => {\n  const cardId = 'lab-regulations-card-body'\n  const [markdown, setValue] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      const file_root = \"./\" + courseId + \"_\" + \"course\" + \"/\"\n      const filename = location + '.md'\n      const filepath = file_root + location + \"/\" + filename\n      const path = cache[filepath]\n      const markdown = await fetch(path).then(res => res.text());\n      setValue(markdown);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"p-1\">\n      <Card>\n        <Card.Header\n          onClick={ () => setOpen(!open) } \n          aria-controls = {cardId} \n          aria-expanded={ open } \n          as = \"h2\"\n          className = \"bg-transparent\"\n        >\n          Lab Regulations\n          {iconToggle(open)}\n        </Card.Header>\n\n        <Collapse in = { open } >\n        <div>\n          <Card.Body>\n            <ReactMarkdown source={ markdown } escapeHtml={false} />\n          </Card.Body>\n        </div>\n        </Collapse>\n      </Card>\n    </div>\n  );\n};\n\nexport default CourseLabRegulations;","import React, { useState, useEffect, Suspense } from \"react\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from 'dayjs'\n\n\n// Exports: Course.js\nconst CourseBreadcrumb = ({course}) => {\n  return (\n    <Breadcrumb>\n      <Breadcrumb.Item >\n          <Link to={\"/courses\"}>Courses</Link> \n      </Breadcrumb.Item>\n\n      <Breadcrumb.Item active > \n          {course.name}\n      </Breadcrumb.Item>\n    </Breadcrumb>\n  );\n};\n\nexport default CourseBreadcrumb;","import React from \"react\";\nimport { CoursesAPI } from \"../../api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport CourseHeading from \"./CourseHeading\"\nimport CourseCurrent from \"./CourseCurrent\"\nimport CourseCanvasButtons from \"./CourseCanvasButtons\"\nimport CourseExperimentSchedule from \"./CourseExperimentSchedule\";\nimport CourseNotebooksReports from \"./CourseNotebooksReports\";\nimport CourseLabRegulations from \"./CourseLabRegulations\";\nimport CourseBreadcrumb from \"./CourseBreadcrumb\"\n\n// Exports: Routes.js\nconst Course = props => {\n  const _course = CoursesAPI.get(parseInt(props.match.params.id, 10));\n\n  if (!_course) {\n    return <div>Sorry, course not found.</div>;\n  }\n\n  const _courseId = _course.id;\n  return (\n    <React.Fragment>\n        <CourseBreadcrumb course = {_course} />\n        <Container className=\"p-1\">\n          <CourseHeading course = { _course } />\n          <CourseCurrent courseId = { _courseId } />\n          <CourseCanvasButtons />\n          <div className=\"p-1\"></div>\n          <CourseExperimentSchedule courseId = { _courseId } />\n          <CourseNotebooksReports courseId = { _courseId } location = {\"notebook\"} />\n          <CourseLabRegulations courseId = { _courseId } location = {\"regulations\"} />\n          <br />\n          {/* <Link to={`${_courseID}/experiments`}>Experiments</Link> */}\n        </Container>\n\n    </React.Fragment>\n  );\n};\n\nexport default Course;\n","import React from 'react'\nimport { ExperimentsAPI }  from '../../api'\nimport { Link } from 'react-router-dom'\n\n\nconst Experiments = props => {\n  const _courseID = parseInt(props.match.params.id, 10);\n\n  return (\n    <div>\n      <ul>\n        {ExperimentsAPI.filtered(_courseID).map(e => (\n          <li key={e.experimentID}>\n            <Link to={`experiments/${e.experimentID}`}>{e.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Experiments\n\n\n\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from 'dayjs'\n\n//Consolidate course and exp breadcrums into 1 --> \n//console.log(props)\n//match -->\n//params: {id: \"1\", experimentID: \"2\"}\n//path: \"/courses/:id/experiments/:experimentID\"\n//url: \"/courses/1/experiments/2\"\n// location --> {pathname: \"/courses/1/experiments/2\"\n\n\n// Exports: Experiment.js\nconst ExperimentBreadcrumb = ({experiment, course}) => {\n  const renderDate = date => (dayjs(date).format(\"MMM. DD\"))\n  const start = renderDate(experiment.startDate)\n  const end = renderDate(experiment.endDate)\n  const order = experiment.order\n  const name = experiment.name\n\n  return (\n    <Breadcrumb >\n      <Breadcrumb.Item >\n          <Link to={\"/courses\"}>Courses</Link> \n      </Breadcrumb.Item>\n\n      <Breadcrumb.Item > \n          <Link to={`/courses/${course.id}`}>{course.name}</Link> \n      </Breadcrumb.Item>\n\n      <Breadcrumb.Item active>\n        Experiment {order} ({start} - {end}): {name}\n      </Breadcrumb.Item>\n    </Breadcrumb>\n  );\n};\n\nexport default ExperimentBreadcrumb;\n","import React from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\nconst prelab_assignment = () => (\n  <div>\n    <ol>\n      <li>\n        <p>\n          Prepare a Table of Physical Constants in your notebook listing, in\n          order, structure, formulae, and melting point ranges of the following\n          substances: (This table should follow the experiment title on the\n          first left-hand page of the experiment.)\n        </p>\n\n        <ol>\n          <li>Benzoic acid</li>\n          <li>Biphenyl</li>\n          <li>4-Bromobenzophenone</li>\n          <li>2,4-Dichlorobenzaldehyde</li>\n          <li>(d,l)-&alpha;-Hydroxy-phenylacetic acid [(d,l)-mandelic acid]</li>\n          (Be sure to look up <strong>(d,l)</strong>, not just{\" \"}\n          <strong>d</strong> or just <strong>l</strong>.)\n          <li>Propanedioic acid (malonic acid)</li>\n          <li>Urea</li>\n          <li>\n            Vanillin (also called vanillan or hydroquinone methyl ether) Prepare\n            a table as shown below to record melting points in the\n            Data/Observation section, towards the bottom of the observation\n            column.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <p>\n          Prepare a table as shown below to record melting points in the\n          Data/Observation section, towards the bottom of the observation\n          column.\n        </p>\n        <p>\n          <img\n            src={cache[\"./Identification_PrelabTable.png\"]}\n            alt=\"Table\"\n            width=\"90%\"\n          />\n        </p>\n      </li>\n    </ol>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <p>\n      <strong>Theoretical Definition of Melting Point</strong>\n    </p>\n\n    <p>\n      The melting point of a solid is the temperature at which the solid and its\n      liquid form are in equilibrium, i.e., molecules move back and forth\n      between the two states at the same rate, so both phases remain present. If\n      the temperature of a solid is measured carefully as the solid is heated,\n      the temperature will be observed to rise until the melting point (m.p.) of\n      the solid is reached, and then the temperature will remain almost constant\n      while the solid melts. The heat absorbed during melting is the “heat of\n      fusion,” the energy needed to move the molecules out of the crystal\n      lattice of the solid. When the solid has completely melted, the addition\n      of more heat again contributes to an increase in the temperature of the\n      sample, now a liquid. This describes the melting of a pure solid. The\n      melting point is characteristic of the compound, independent of source,\n      purification procedure, etc., and is useful in identifying the compound.\n      However, many different compounds have identical or very similar melting\n      points.\n    </p>\n\n    <p>\n      <strong>Functional Definition of Melting Point</strong>\n    </p>\n\n    <p>\n      Strictly speaking, the melting point is never a “point”. It is invariably\n      a narrow range, about 1&deg; for most compounds, but 0.5&deg; for some,\n      1.5 – 2.0&deg; for others. Part of the range is an experimental artifact.\n      Since heat transfer is often uneven, all parts of a solid sample are\n      unlikely to be at the same temperature simultaneously. While some regions\n      of the sample may be at the melting point (solid and liquid in\n      equilibrium), other regions may be at slightly higher or lower\n      temperatures. Thus, visible melting will occur over a range of\n      temperatures. Therefore, the proper report of a melting point is the\n      temperature range from the first visible appearance of liquid\n      (distinguished from “softening” of the crystal) to the disappearance of\n      the last visible crystal of solid. The end is the most important point,\n      but the whole range is needed for full interpretation (e.g. benzoic acid,\n      m.p. = 120 – 121.5&deg;).\n    </p>\n\n    <p>\n      Melting points for many organic compounds may be found in the CRC Handbook\n      of Chemistry and Physics (hbcponline.com). These “literature” melting\n      points are taken from reports in the chemical literature and indicate the\n      melting range or upper end of the melting range of very pure samples of\n      compounds. Consequently, these values are the highest values that can be\n      expected for each compound. (See below for effects of impurities on\n      melting points.) In some cases, more than one melting point will be listed\n      for a single compound. This usually means that the compound can exist in\n      more than one type of crystal lattice and that the different types have\n      different stabilities and thus will break down at different temperatures.\n    </p>\n\n    <p>\n      <strong>Effects of an \"Impurity\"</strong>\n    </p>\n\n    <p>\n      If two different compounds, A and B, are intimately mixed, the melting\n      point behavior of the mixture differs from that of either pure compound.\n      When a small portion of B is mixed with A, the upper limit of the melting\n      point range of A is lowered. Increasing the amount of B in A continuously\n      decreases the upper limit of the melting range of the resultant mixture\n      until such point that B ceases to be the impurity in A, and A then becomes\n      the impurity in B. The point at which this occurs is called the eutectic;\n      the eutectic temperature and composition of a mixture varies with the\n      nature of the components A and B.\n    </p>\n\n    <p>\n      <img\n        src={cache[\"./Identification_Background_MeltingCurve.png\"]}\n        alt=\"Table\"\n        width=\"90%\"\n      />\n    </p>\n\n    <p>\n      The melting point of a eutectic mixture is below that of either pure A or\n      pure B and is the lowest temperature at which any mixture of A and B can\n      melt. The lower limit of the melting range of all mixtures of A and B is\n      actually equal to the eutectic temperature because that part of the\n      mixtures which is of the eutectic composition melts at the eutectic\n      temperature. Actual observation of the true lower limit is difficult in\n      all mixtures and impossible in mixtures containing little of one\n      component. In most mixtures, the small amount of material that consists of\n      the eutectic composition, and therefore melts first, is obscured by the\n      relatively large amount of remaining “pure” component. The upper limit of\n      the melting range is more readily observed, since it is much easier to\n      note the disappearance of the last crystal in the liquid than appearance\n      of the first drop of liquid in the mass of solid. The upper limit of the\n      melting range of a compound containing an impurity is always lower than\n      that of the pure compound.\n    </p>\n\n    <p>\n      <strong>Mixed Melting Points </strong>\n    </p>\n    <p>\n      The melting point of a compound is a physical characteristic often used to\n      identify the compound and provide information about its purity. Pure\n      compounds melt sharply. The presence of an impurity in a sample lowers the\n      upper end of the melting range and very often causes the observed melting\n      range to be wider than that of the pure compound. Therefore, if two\n      samples of similar melting point are intimately mixed, and the melting\n      point of the mixture is not “depressed” or “broadened,” the two samples\n      are the same compound. As a corollary, if the melting point of the mixture\n      is depressed and possibly broadened, the two samples cannot be the same\n      compound. When attempting to identify a compound by the mixed melting\n      point method, it is critical to observe the melting behavior of the\n      unknown and standard side by side with the mixture. The procedure gives a\n      direct comparison of the mixture with the standards and allows you to\n      observe any variation of melting behavior between samples under your\n      experimental conditions. It is also useful to test a second possibility to\n      assure that under the conditions of your experiment the technique is\n      capable of distinguishing between different compounds.\n    </p>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    {\" \"}\n    <p>\n      <strong>Report your Results in a tabular format.</strong>\n    </p>\n    <p>(For this experiment, this may mean recopying your Data table.)</p>\n  </div>\n);\n\nconst study_questions = () => (\n  <div>\n    <ol>\n      <li>\n        Describe the effect on the melting point of mixing two different\n        compounds of similar melting points.\n      </li>\n\n      <li>\n        Identify your unknown. Give all the evidence that led to your\n        conclusion.\n      </li>\n\n      <li>\n        An unknown compound A (m.p. = 130 – 131&deg;) is mixed with another\n        unknown compound B (m.p. = 130 – 131&deg;). The mixture of A and B melts\n        at 120 – 126&deg;. What conclusion about the identities of A and B can\n        be drawn from this experiment? Explain.\n      </li>\n    </ol>\n  </div>\n);\nconst discussion = () => (\n  <div>\n    {\" \"}\n    <p>\n      Follow the procedure for writing a discussion outlined on page 8. Also, be\n      sure to include the experimental and literature melting point values for\n      your compound.{\" \"}\n    </p>\n    <p>Page 8, for reference:</p>\n    <p>\n      {\" \"}\n      <strong>Discussion:</strong> In the Discussion section, provide a bit of\n      background on your motivation for undertaking the experiment. Also provide\n      some details on how well the experiment worked, and discuss mechanistic\n      issues if you think it appropriate. If you wish to give an overview of how\n      you made structural assignments, this is a good place to do it. However,\n      you do not need to get into all the gory details; just provide the\n      highlights. A paragraph or two is usually enough for the entire Discussion\n      section. The main points that should be included are given for each\n      experiment in the lab manual.\n    </p>\n  </div>\n);\nconst waste_disposal = () => (\n  <div>\n    <ol>\n      <li>\n        <strong>Used Capillaries:</strong>\n      </li>\n      Discard into the plastic beaker labeled “Used Capillaries”.\n      <li>\n        <strong>Extra compounds:</strong>\n      </li>\n      Brush the extra solid into the solid waste container in the waste hood and\n      also discard the weighing paper in the same container.\n      <li>\n        <strong>Unknown vial:</strong>\n      </li>\n      Save it in your assigned lab drawer.\n    </ol>\n  </div>\n);\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div>\n      <h2>General Procedures</h2>\n\n      <p>\n        <strong>a. Filling the Melting Point Capillary Tube</strong>\n      </p>\n      <ul>\n        <li>\n          Points to remember: Use the spatula attached to each bottle to take\n          small samples (the tip of the spatula) on labeled pieces of paper. To\n          avoid contamination, never return excess samples to bottles; instead,\n          share with a neighbor. Grind the samples several times with a spatula\n          on weighing paper to form a fine powder. This will facilitate uniform\n          heat transfer throughout the sample. If melting points are to be\n          compared, they should be taken side by side when possible. Fill one\n          m.p. capillary tube for each sample or each mixture, and store all\n          tubes in slits in labeled papers.\n        </li>\n      </ul>\n      <p>\n        <strong>b. The Melting Point</strong>\n      </p>\n      <ul>\n        <li>\n          The melting point in a capillary tube is taken as the temperature\n          range between the appearance of the first droplet and the\n          disappearance of the last crystal. A shrinking or milking may be\n          visible a few degrees below the melting point. The actual melting\n          range should be determined slowly over a period of 30 sec. This can be\n          achieved by having a proper ramp rate.\n        </li>\n      </ul>\n      <p>\n        <strong>c. Use of the Digimelt Melting Point Apparatus</strong>\n      </p>\n      <ul>\n        <li>\n          Instructions for using the Digimelt apparatus will be available in the\n          laboratory.\n        </li>\n      </ul>\n    </div>\n  );\n\n  const procedure_2 = () => (\n    <div>\n      <h2>Procedure for the Lab Period</h2>\n      <h5>\n        <strong>Check in</strong>\n      </h5>\n      <ul>\n        <li>Do this as time permits.</li>\n        <li>\n          Check each item in your drawer and cupboard against the Check List. Be\n          sure all glassware is clean and unbroken. There is a labeled display\n          of apparatus available in the laboratory. On a separate sheet of\n          paper, make a list of missing items, so that the instructor can get\n          them for you; include your name and desk number. Sign your check list\n          and return it to the instructor.\n        </li>\n      </ul>\n      <h5>\n        <strong>\n          Melting Points (Temperatures should be recorded to the first decimal\n          place)\n        </strong>\n      </h5>\n      <ol>\n        <li>\n          Standard compounds and unknown compounds will be available on the\n          reagent shelf.\n        </li>\n        <li>\n          Identification of your unknown: Record the number of your unknown and\n          then prepare a capillary for determining its melting point. This\n          sample will be used to determine a rough melting point, so that you\n          can choose the two best possibilities from the standards for further\n          comparison.\n        </li>\n        <li>\n          Attach melting point tube prepared in step 2 to a labeled slit in\n          paper.Take the tube to a Digimelt apparatus and insert the tube. As\n          the sample melts, record the melting point range of the sample\n          directly in your lab notebook.\n        </li>\n        <li>\n          Your unknown is one of the compounds listed in your pre-lab\n          assignment. Devise a procedure to identify your unknown by mixed\n          melting point method. Describe this procedure in your notebook. Record\n          all data in a table under observation and data. When comparing melting\n          point values, experimental results should be obtained side by side\n          when possible.\n        </li>\n      </ol>\n    </div>\n  );\n\n  const procedureArray = [procedure_1(), procedure_2()];\n  return procedureArray;\n};\n\nconst Experiment_1 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_1;\n","import React from \"react\";\n\nconst prelab_assignment = () => (<h2> N/A </h2>);\nconst background = () => (<h2> N/A </h2>);\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div>\n      N/A\n    </div>\n  );\n  const procedureArray = [procedure_1()];\n  return procedureArray;\n};\n\nconst results = () => (<h2> N/A  </h2>);\nconst study_questions = () => (<h2> N/A </h2>);\nconst discussion = () => (<h2> N/A </h2>);\nconst waste_disposal = () => (<h2> N/A </h2>);\n\n\n\nconst Experiment_2 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\n\n\nexport default Experiment_2","import React from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\nconst prelab_assignment = () => (\n  <div>\n    <ol>\n      <li>\n        Prepare a Table of Physical Constants in your lab notebook listing\n        structures, formulae, and molecular weights for each of the following\n        and boiling points of solvents and melting points, and solubilities for\n        the solutes. Include a legend for the abbreviations you use.\n        <p style={{ marginLeft: 40 }}>\n          Solvents: Acetone, Diethyl ether, Methanol, Toluene, Water\n          <br /> Solutes: Trimyristin, Triphenylmethane\n        </p>\n      </li>\n\n      <p>\n        <li>\n          Copy the table given on page 25 in the <b>Observations </b>\n          section of your notebook, opposite the <b>Procedure </b>\n          for the Solubility Tests.\n        </li>\n      </p>\n    </ol>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <p>\n      Nutmeg powder is a mixture of many essential oils and oleoresins. In this\n      experiment, you will extract trimyristin from nutmeg powder and\n      recrystallize trimyristin.\n    </p>\n    <p>\n      Recrystallization is one of the most important purification techniques\n      used in organic chemistry. Recrystallization is used to purify solids\n      contaminated by relatively small amounts of solid impurities. Compounds\n      having different solubilities at different temperatures can generally be\n      recrystallized. For most compounds, the solubility increases as the\n      temperature of the solvent increases. In practice, this means that a\n      suitable solvent for recrystallization is one in which there is a large\n      difference between the solubility of the compound in hot solvent compared\n      with that in cold solvent. A compound which dissolves to form a saturated\n      solution at or near the boiling point of a suitable solvent can be largely\n      recovered since it will come out of the solvent, or recrystallize, when\n      the solution is cooled. If the compound is impure, removal of insoluble\n      impurities (by gravity filtration) is accomplished with the desired\n      product dissolved in the hot solution. Other impurities remain largely\n      dissolved even when the solution is cooled because they are more soluble\n      and/or present in much smaller amounts than the desired product.\n      Recrystallizations are designed, by proper use of solvents, to maximize\n      the yield and purity, although the degree of recovery and quality often\n      vary inversely.\n    </p>\n    <p>\n      <b>Choice of a suitable solvent:</b>\n    </p>\n    <ol type=\"a\">\n      <li>The desired compound should be very soluble in the hot solvent.</li>\n      <li>The desired compound is very insoluble in the cold solvent.</li>\n      <li>\n        The solvent should be easily removable (fairly volatile) from the\n        desired product.\n      </li>\n    </ol>\n    <p>\n      <b>Choice of a solvent pair:</b>\n    </p>\n    <p>\n      Sometimes no single solvent can fill the requirements of suitability. In\n      such cases, two miscible solvents (solvent pair) can be combined to\n      produce a suitable solvent. Criteria for solvents in a solvent pair are:\n    </p>\n    <ol type=\"a\">\n      <li>\n        The desired compound will be relatively soluble in solvent #1 even when\n        the solvent is cold.\n      </li>\n      <li>\n        The compound will be relatively insoluble in solvent #2 even when the\n        solvent is hot.\n      </li>\n      <li>Solvent #1 and solvent #2 must be miscible.</li>\n    </ol>\n    <p>\n      A combination of two miscible solvents as described will often provide a\n      solvent pair in which there is a large difference between the solubility\n      of the compound in hot and cold solvent.\n    </p>\n    <p>\n      <b>Solubility</b>\n    </p>\n    <p>\n      The theory of solubility is simplistically described by the phrase “like\n      dissolves like,” i.e., solutes tend to dissolve in solvents of similar, or\n      like polarity. Some commonly used solvents for recrystallization are\n      pentane, hexane, toluene, ethyl acetate, ethanol, methanol, and water.\n    </p>\n    <p>\n      In this experiment, we will use acetone, diethyl ether, toluene, methanol,\n      and water as solvents. Of these solvents, toluene is the least polar, and\n      water is the most polar. The normal procedure for the purification of a\n      compound by recrystallization is to predict its solubility on the basis of\n      its structure and then to test its solubility in a variety of solvents.\n      Once a suitable solvent is found, that compound can be recrystallized.\n    </p>\n    <p>\n      <b>Theory of Extraction</b>\n    </p>\n    <p>\n      The transfer of a solute from one phase to another is a very common\n      technique in organic chemistry. It is called extraction, and it is also a\n      common technique in everyday life. When you steep a tea bag in boiling\n      water, add a bay leaf to a pot of soup, or wash a load of laundry, you are\n      performing a solid/liquid extraction, in which a solution containing\n      several components is mixed with a second, immiscible liquid, for the\n      purpose of extracting one component of the solution into the second\n      solvent.\n    </p>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    <ol>\n      <li>\n        Calculate the % Recovery of pure trimyristin based on the amount of\n        crude trimyristin you obtained.\n      </li>\n      <li>\n        2. Calculate the % Recovery of your crude trimyristin based on the total\n        amount of trimyristin in your starting sample. Assume that the amount of\n        trimyristin in nutmeg is 22% by weight.\n      </li>\n    </ol>\n  </div>\n);\n\nconst study_questions = () => (\n  <div>\n    <ol>\n      <li>\n        Given the solubility results shown in the table below, choose the most\n        suitable solvent or solvent pair for recrystallizing each compound.\n        Neither water nor ethanol is miscible with ligroine (mixed hexanes), and\n        water does not mix with toluene.\n      </li>\n      <img\n        src={cache[\"./TrimiristinExtraction_SolubilityTable_StudyQuestion.png\"]}\n        alt=\"Solubility Table\"\n      />\n      <br />\n      Please keep your answers to the following questions brief.\n      <br />\n      <li>\n        If extracted crude trimyristin were a white crystalline solid, should\n        Norite be used in the recrystallization? Explain.\n      </li>\n      <li>\n        Why is some trimyristin lost each time it is washed with fresh cold\n        solvent while in the Büchner funnel?\n      </li>\n      <li>\n        If the melting point of purified trimyristin was determined before the\n        sample was completely dry, what errors would most likely result?\n        Explain.\n      </li>\n      <li>\n        Naphthalene is an aromatic hydrocarbon with m.p. = 80 &#8451;. Is\n        toluene likely to be a good solvent for recrystallization of\n        naphthalene? (Hint: Find the structure of naphthalene, and the structure\n        and boiling point of toluene.)\n      </li>\n    </ol>\n  </div>\n);\n\nconst discussion = () => (\n  <div>\n    <p>\n      Draw your own conclusions about the results from all parts of this\n      experiment. Some points to include are the purity of the trimyristin\n      before and after recrystallization and percent recovery. Your discussion\n      should also include a comment on the polarities of solutes and solvents\n      used in this experiment.\n    </p>\n    <p>\n      Be sure to include the melting point of your compound (experimental and\n      literature values) as well as the percent recovery.\n    </p>\n  </div>\n);\nconst waste_disposal = () => (\n  <div>\n    <p>\n      <div class=\"a\">\n        <b>Week 1</b>\n      </div>\n    </p>\n    <ol>\n      <li>\n        <u>Solubility Tests:</u>\n        <br /> Discard the contents of the test tubes into the non-halogenated\n        waste bottle in your hood. Rinse the test tubes with a few drops of\n        acetone and discard these rinsings also into the same non-halogenated\n        waste bottle.\n      </li>\n      <li>\n        <u>Extraction of Trimyristin:</u>\n        <br /> Discard the filter paper with nutmeg residue into the solid waste\n        container in the waste hood. Discard any nutmeg residue left in the\n        Erlenmeyer flask also into the same solid waste container in the waste\n        hood.\n        <br /> Rinse the funnel and the Erlenmeyer flask with a few drops of\n        acetone and discard these rinsings into the non-halogenated waste bottle\n        in your hood.\n      </li>\n    </ol>\n  </div>\n);\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div>\n      <p>\n        <div class=\"a\">\n          <b>Week 1</b>\n        </div>\n      </p>\n\n      <p>\n        <b>Solubility Tests</b>\n      </p>\n\n      <p>\n        Test the solubility of pure triphenylmethane in all three solvents. The\n        solubility tests should be done side by side. Place about 20 mg of\n        solute, the tip of a spatula full, in each of three test tubes (one for\n        each solvent). Add about 1 mL of solvent to each test tube and grind the\n        solute to subdivide the particles as much as possible. Observe and note\n        the amount of solid, not yet drawing conclusions about solubility. Heat\n        test tubes with stirring in a steam bath. Even very soluble compounds\n        may take several minutes to dissolve; however, prolonged heating may\n        result in evaporation of solvent. Take care to distinguish melting from\n        dissolving; a solute with melting point below the temperature of the\n        steam bath or boiling point of the solvent (see your Table of Physical\n        Constants) may melt yet not dissolve, or melt first and then dissolve.\n        Observe the amount of solid remaining, if any, in the hot solvent, and\n        record your estimation of solubility in the table. Place the test tube\n        in an ice bath and observe and note the amount of recrystallized\n        product, if any.\n      </p>\n      <p>\n        Refer to the structures of the solvents and solute to give a tentative\n        prediction of the solubilities on the basis of polarity. This will help\n        you develop a sense of lab work as you compare theoretical prediction\n        with actual result. Remember, as you fill in the table, that the results\n        are a matter of degree, judged more by correct trend than by actual\n        number of ‘+’s and ‘-‘s. Record your Results in the Solubility Table in\n        your notebook.\n      </p>\n\n      <p>\n        Copy this Solubility Table in your <b>Observations</b>.\n      </p>\n\n      <img\n        src={cache[\"./TrymiristinExtraction_solubilitytable.png\"]}\n        alt=\"Solubility Table\"\n      />\n\n      <p>\n        <u>Legend for observation:</u>\n      </p>\n      <p>\n        <b>+++</b> soluble, all compound dissolved\n        <br />\n        <b>---</b> insoluble, no dissolution observed\n        <br />\n        <b>++</b> moderateble soluble, more than hald, but not all sample\n        dissolved\n        <br />\n        <b>+</b> slightly soluble, less than half of the sample dissolved.\n        <br />\n        <b>Crystals</b> if crystals formed when cooled\n      </p>\n    </div>\n  );\n\n  const procedure_2 = () => <div>Procedure 2</div>;\n\n  const procedureArray = [procedure_1(), procedure_2()];\n  return procedureArray;\n};\n\n\n\nconst Experiment_3 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal(),\n};\n\nexport default Experiment_3;\n","import React from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\nconst prelab_assignment = () => (\n  <div>\n    <ol>\n      <li>\n        Prepare a Table of Physical Constants in your lab notebook listing\n        structures, formulae, and molecular weights for each of the following\n        and boiling points of solvents and melting points, and solubilities for\n        the solutes. Include a legend for the abbreviations you use.\n        <p style={{ marginLeft: 40 }}>\n          Solvents: Acetone, Diethyl ether, Methanol, Toluene, Water\n          <br /> Solutes: Trimyristin, Triphenylmethane\n        </p>\n      </li>\n\n      <p>\n        <li>\n          {\" \"}\n          Copy the table given on page 25 in the <b>Observations </b>\n          section of your notebook, opposite the <b>Procedure </b>\n          for the Solubility Tests.\n        </li>\n      </p>\n    </ol>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <p>\n      Nutmeg powder is a mixture of many essential oils and oleoresins. In this\n      experiment, you will extract trimyristin from nutmeg powder and\n      recrystallize trimyristin.\n    </p>\n    <p>\n      Recrystallization is one of the most important purification techniques\n      used in organic chemistry. Recrystallization is used to purify solids\n      contaminated by relatively small amounts of solid impurities. Compounds\n      having different solubilities at different temperatures can generally be\n      recrystallized. For most compounds, the solubility increases as the\n      temperature of the solvent increases. In practice, this means that a\n      suitable solvent for recrystallization is one in which there is a large\n      difference between the solubility of the compound in hot solvent compared\n      with that in cold solvent. A compound which dissolves to form a saturated\n      solution at or near the boiling point of a suitable solvent can be largely\n      recovered since it will come out of the solvent, or recrystallize, when\n      the solution is cooled. If the compound is impure, removal of insoluble\n      impurities (by gravity filtration) is accomplished with the desired\n      product dissolved in the hot solution. Other impurities remain largely\n      dissolved even when the solution is cooled because they are more soluble\n      and/or present in much smaller amounts than the desired product.\n      Recrystallizations are designed, by proper use of solvents, to maximize\n      the yield and purity, although the degree of recovery and quality often\n      vary inversely.\n    </p>\n    <p>\n      <b>Choice of a suitable solvent:</b>\n    </p>\n    <ol type=\"a\">\n      <li>The desired compound should be very soluble in the hot solvent.</li>\n      <li>The desired compound is very insoluble in the cold solvent.</li>\n      <li>\n        The solvent should be easily removable (fairly volatile) from the\n        desired product.\n      </li>\n    </ol>\n    <p>\n      <b>Choice of a solvent pair:</b>\n    </p>\n    <p>\n      Sometimes no single solvent can fill the requirements of suitability. In\n      such cases, two miscible solvents (solvent pair) can be combined to\n      produce a suitable solvent. Criteria for solvents in a solvent pair are:\n    </p>\n    <ol type=\"a\">\n      <li>\n        The desired compound will be relatively soluble in solvent #1 even when\n        the solvent is cold.\n      </li>\n      <li>\n        The compound will be relatively insoluble in solvent #2 even when the\n        solvent is hot.\n      </li>\n      <li>Solvent #1 and solvent #2 must be miscible.</li>\n    </ol>\n    <p>\n      A combination of two miscible solvents as described will often provide a\n      solvent pair in which there is a large difference between the solubility\n      of the compound in hot and cold solvent.\n    </p>\n    <p>\n      <b>Solubility</b>\n    </p>\n    <p>\n      The theory of solubility is simplistically described by the phrase “like\n      dissolves like,” i.e., solutes tend to dissolve in solvents of similar, or\n      like polarity. Some commonly used solvents for recrystallization are\n      pentane, hexane, toluene, ethyl acetate, ethanol, methanol, and water.\n    </p>\n    <p>\n      In this experiment, we will use acetone, diethyl ether, toluene, methanol,\n      and water as solvents. Of these solvents, toluene is the least polar, and\n      water is the most polar. The normal procedure for the purification of a\n      compound by recrystallization is to predict its solubility on the basis of\n      its structure and then to test its solubility in a variety of solvents.\n      Once a suitable solvent is found, that compound can be recrystallized.\n    </p>\n    <p>\n      <b>Theory of Extraction</b>\n    </p>\n    <p>\n      The transfer of a solute from one phase to another is a very common\n      technique in organic chemistry. It is called extraction, and it is also a\n      common technique in everyday life. When you steep a tea bag in boiling\n      water, add a bay leaf to a pot of soup, or wash a load of laundry, you are\n      performing a solid/liquid extraction, in which a solution containing\n      several components is mixed with a second, immiscible liquid, for the\n      purpose of extracting one component of the solution into the second\n      solvent.\n    </p>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    {\" \"}\n    <p>\n      <b>E. RESULTS</b>\n    </p>\n    <ol>\n      <li>\n        Calculate the % Recovery of pure trimyristin based on the amount of\n        crude trimyristin you obtained.\n      </li>\n      <li>\n        2. Calculate the % Recovery of your crude trimyristin based on the total\n        amount of trimyristin in your starting sample. Assume that the amount of\n        trimyristin in nutmeg is 22% by weight.\n      </li>\n    </ol>\n  </div>\n);\n\nconst study_questions = () => (\n  <div>\n    <ol>\n      <li>\n        Given the solubility results shown in the table below, choose the most\n        suitable solvent or solvent pair for recrystallizing each compound.\n        Neither water nor ethanol is miscible with ligroine (mixed hexanes), and\n        water does not mix with toluene.\n      </li>\n      <img\n        src={cache[\"./TrimiristinExtraction_SolubilityTable_StudyQuestion.png\"]}\n        alt=\"Solubility Table\"\n      />\n\n      <br />\n      Please keep your answers to the following questions brief.\n      <br />\n      <li>\n        If extracted crude trimyristin were a white crystalline solid, should\n        Norite be used in the recrystallization? Explain.\n      </li>\n      <li>\n        Why is some trimyristin lost each time it is washed with fresh cold\n        solvent while in the Büchner funnel?\n      </li>\n      <li>\n        If the melting point of purified trimyristin was determined before the\n        sample was completely dry, what errors would most likely result?\n        Explain.\n      </li>\n      <li>\n        Naphthalene is an aromatic hydrocarbon with m.p. = 80 &#8451;. Is\n        toluene likely to be a good solvent for recrystallization of\n        naphthalene? (Hint: Find the structure of naphthalene, and the structure\n        and boiling point of toluene.)\n      </li>\n    </ol>\n  </div>\n);\n\nconst discussion = () => (\n  <div>\n    {\" \"}\n    <p>\n      <b>F. DISCUSSION</b>\n    </p>\n    <p>\n      Draw your own conclusions about the results from all parts of this\n      experiment. Some points to include are the purity of the trimyristin\n      before and after recrystallization and percent recovery. Your discussion\n      should also include a comment on the polarities of solutes and solvents\n      used in this experiment.\n    </p>\n    <p>\n      Be sure to include the melting point of your compound (experimental and\n      literature values) as well as the percent recovery.\n    </p>\n  </div>\n);\nconst waste_disposal = () => (\n  <div>\n    {\" \"}\n    <p>\n      <b>G. WASTE DISPOSAL</b>\n    </p>\n    <p>\n      <div class=\"a\">\n        <b>Week 2</b>\n      </div>\n    </p>\n    <ol>\n      <li><u>Recrystallization of Trimyristin:</u>\n         <br/> Discard the filter paper from recrystallized trimyristin into the solid waste container in the waste hood.\n         <br/> Discard the filtrate into the non-halogenated waste bottle in your hood.\n         <br/> Rinse all the glassware you used with a few drops of acetone and discard these rinsings into the non-halogenated waste bottle in your hood.\n      </li>\n      <li><u>Melthing Points:</u>\n         <br/> Used Capillaries: Discard into the plastic beaker labeled “Used Capillaries”.\n         <br/> Discard the weighing paper in the solid waste container in the waste hood.\n      </li>\n   </ol>\n  </div>\n);\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div> \n      Procedure 1\n    </div>\n  )\n\n  const procedure_2 = () => (\n    <div> \n      Procedure 2\n    </div>\n  )\n\n  const procedureArray = [procedure_1(), procedure_2()]\n  return procedureArray\n\n}\n\n\n\nconst Experiment_4 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_4;\n","import React from \"react\";\n\nconst prelab_assignment = () => (<h2> N/A </h2>);\nconst background = () => (<h2> N/A </h2>);\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div>\n      N/A\n    </div>\n  );\n  const procedureArray = [procedure_1()];\n  return procedureArray;\n};\n\nconst results = () => (<h2> N/A  </h2>);\nconst study_questions = () => (<h2> N/A </h2>);\nconst discussion = () => (<h2> N/A </h2>);\nconst waste_disposal = () => (<h2> N/A </h2>);\n\n\n\nconst Experiment_5 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\n\n\nexport default Experiment_5","import React from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\n\n\n\nconst prelab_assignment = () => (\n  <div>\n    <p>\n      In your notebook, prepare a Table of Physical Constants for n-hexane,\n      dichloromethane, ethyl acetate, ferrocene, and acetyl ferrocene.\n    </p>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <p>\n      In the TLC experiment, you gained some experience with chromatography. As\n      you may have noticed, TLC is a rapid, easy method for separating mixtures\n      of compounds. However, it is limited to small samples (only a few\n      milligrams). To handle larger amounts of material, more adsorbant is\n      needed. One common approach to larger scale separations is column\n      chromatography, where the adsorbant (usually silica gel or alumina) is\n      packed into a tube and a continuous flow of solvent (eluant) is passed\n      through the adsorbant. As with TLC, the different compounds in the sample\n      are carried along, going back and forth between solvent and adsorbant. The\n      relative rates of these movements are dependent upon the relative\n      strengths of the attraction of these compounds to the adsorbant and upon\n      their solubilities in the eluant. With a polar adsorbant, the more polar\n      compounds in the sample will be held more tightly to the stationary phase\n      and move more slowly down the column. Therefore, when the same adsorbant\n      and solvent system are used in both, TLC and column chromatography will\n      yield the same order of elution for a given series of compounds. So, as\n      described in Most, TLC is a valuable tool for rapidly devising appropriate\n      solvent systems for column chromatography separations.\n    </p>\n    <p>\n      Unlike TLC, column chromatography is not limited to only one solvent\n      system for a given separation. Since the solvent is continuously supplied\n      at the top of the column, it is possible to change the eluting solvent at\n      any point in the separation. This advantage allows us to separate complex\n      mixtures containing compounds of widely varying polarity. For separations\n      of such samples, the column is prepared in a relatively non-polar solvent.\n      As the less polar components are eluted from the column, the polarity of\n      the solvent can be progressively increased, thus allowing selective\n      removal of compounds in order of increasing polarity.\n    </p>\n    <p>\n      In addition to this versatility for separating complex mixtures, column\n      chromatography has the advantage that it can be used for preparative scale\n      separations and purification, while TLC is usually limited to analytical\n      procedures. The amount of material to be separated can be varied from\n      milligrams to kilograms by increasing the size of the column and the\n      amount of adsorbant. For convenience and economy, the separation of a\n      mixture of ferrocene and acetyl ferrocene in our experiment will be done\n      on a semi-micro scale.\n    </p>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    <p>Calculate the total % recovery, as in Experiment 3.</p>{\" \"}\n  </div>\n);\n\nconst study_questions = () => (\n  <div>\n    <p>\n      The R<sub>f</sub> values of three compounds on TLC plates developed with\n      10:1 hexane:acetone are (A) 0.33, (B) 0.91, and (C) 0.54. What would be\n      their order of elution from an alumina column which is eluted with 10:1\n      hexane:acetone (i.e., which would elute first, second and third)? Explain\n      your reasoning. What difference if any would be seen if the compounds were\n      eluted from the column with 7:1 hexane:acetone? Explain.\n    </p>\n  </div>\n);\n\nconst discussion = () => (\n  <div>\n    <ol>\n      <li>\n        Which of your fractions contained ferrocene? Which contained acetyl\n        ferrocene? Explain, using your data.\n      </li>\n      <li>\n        Did you isolate pure samples of ferrocene and acetyl ferrocene? What is\n        your evidence?\n      </li>\n      <li>\n        Which of the two compounds is more polar? Explain. (Give evidence from\n        this experiment and from the structures.)\n      </li>\n      <li>\n        If the column in this experiment had been packed and eluted with\n        dichloromethane instead of hexane, which of the compounds would have\n        been eluted first? Explain.\n      </li>\n      <li>\n        Comment on % recovery, agreement of the experimental results to theory,\n        etc. etc. (Please keep it brief!)\n      </li>\n    </ol>\n  </div>\n);\n\nconst waste_disposal = () => <div> ToDo </div>;\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div> \n      Procedure 1\n    </div>\n  )\n\n  const procedure_2 = () => (\n    <div> \n      Procedure 2\n    </div>\n  )\n\n  const procedureArray = [procedure_1(), procedure_2()]\n  return procedureArray\n\n}\n\nconst Experiment_6 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_6;\n","import React from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\n\n\nconst prelab_assignment = () => (\n  <div>\n    <p>\n      In your notebook, prepare a Table of Physical Constants for bromine,\n      methylene chloride (dichloromethane), dimethyl fumarate, dimethyl maleate,\n      ethyl acetate, and <i>n</i>-hexane.\n    </p>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <p>\n      Isomerization of dimethyl maleate to dimethyl fumarate is done using Br\n      <sub>2</sub> in methylene chloride (CH<sub>2</sub>Cl<sub>2</sub>), in the\n      presence of light, and this reaction is monitored by Thin Layer\n      Chromatography.\n    </p>\n    <img src={cache[\"./Isomerization_SchemeOverview.png\"]} alt=\"Scheme Overview\" />\n    <p>The reaction proceeds according to the following mechanism:</p>\n    <img src={cache[\"./Isomerization_SchemeBreakdown.png\"]} alt=\"Scheme Breakdown\" />\n  </div>\n);\n\n\nconst results = () => <div> ToDo </div>;\n\nconst study_questions = () => <div> ToDo </div>;\n\nconst discussion = () => (\n  <div>\n    <ol>\n      <li>\n        According to your R\n        <sub>\n          <i>f</i>\n        </sub>\n        values, which compound, dimethyl fumarate or dimethyl maleate, is more\n        polar? Does the structure support this argument? Explain.\n      </li>\n      <li>\n        Which of the two isomers, <i>cis</i> or <i>trans</i> form (dimethyl\n        maleate or dimethyl fumarate), is more stable? Why?\n      </li>\n      <li>\n        Suggest another experimental method to identify dimethyl fumarate. How\n        would this method indicate the purity of the product?\n      </li>\n    </ol>\n  </div>\n);\n\nconst waste_disposal = () => (\n  <div>\n    <ol>\n      <li>\n        Dispose of eluting solvent from the TLC jars in the Non-Halogenated\n        Waste container. Leave the TLC jars open in your hood.\n      </li>\n      <li>Discard the filtrate in the Halogenated Waste container.</li>\n      <li>\n        Discard the dimethyl fumarate crystals in the Solid Waste container.\n      </li>\n    </ol>\n  </div>\n);\n\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div> \n      Procedure 1\n    </div>\n  )\n\n  const procedure_2 = () => (\n    <div> \n      Procedure 2\n    </div>\n  )\n\n  const procedureArray = [procedure_1(), procedure_2()]\n  return procedureArray\n\n}\n\n\nconst Experiment_7 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_7;\n","import React from \"react\";\n\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\n\n\n\nconst prelab_assignment = () => (\n  <div>\n    <p>\n      In your notebook, prepare a Table of Physical Constants for benzoic acid,\n      2-chlorobenzoic acid, salicylic acid (2-hydroxybenzoic acid), naphthalene,\n      1,4-dimethoxybenzene (hydroquinone dimethyl ether), 1,4-dichlorobenzene,\n      ethyl acetate, and water.\n    </p>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <ol>\n      <li>\n        <b>Theory of Extraction</b>\n      </li>\n      <p>\n        The transfer of a solute from one phase to another is a very common\n        technique in organic chemistry. It is called extraction, and it is also\n        a common technique in everyday life. When you steep a tea bag in boiling\n        water, add a bay leaf to a pot of soup, or wash a load of laundry, you\n        are performing a solid/liquid extraction, in which a solution containing\n        several components is mixed with a second, immiscible liquid, for the\n        purpose of extracting one component of the solution into the second\n        solvent.\n      </p>\n      <p>\n        We have seen that recrystallization is used to purify solids that are\n        contaminated by relatively small amounts of impurities. By contrast, the\n        technique of extraction is a more “coarse” or preliminary technique, in\n        that it can be used to separate one compound from another or from large\n        amounts of impurities.\n      </p>\n      <p>\n        Most <u>uncharged</u> organic molecules are more soluble in organic\n        solvents than in water. If the organic solvent itself is not very\n        soluble in water, then when the solvent or one of its solutions is mixed\n        with water, two layers will form, and the solvents are said to be{\" \"}\n        <u>immiscible</u>. The layers are called the <u>organic layer</u> and\n        the <u>aqueous layer</u>. If the two layers are shaken together, small\n        amounts of the components of the organic layer will dissolve in (or be\n        extracted into) the aqueous layer, and small amounts of the aqueous\n        layer components will dissolve (be extracted into) the organic layer,\n        establishing equilibrium between the two layers. Thus, if a neutral\n        compound C is initially dissolved in one layer (phase), it will be\n        distributed, or “partitioned,” between the two layers at equilibrium.\n        The distribution is expressed quantitatively in terms of the\n        coefficient, <b>K</b>. Ideally, the distribution coefficient of compound\n        C is equal to the ratio of the individual solubilities of C in pure\n        solvent, <b>S</b>, and in pure water, <b>W</b>.\n      </p>\n      <img src={cache[\"./Extractionof2Unknowns_K.png\"]} alt=\"K Equation\" />\n\n      <p>\n        For extraction of solute from solvent A into solvent B with a given\n        volume of solvent B, several extractions each with small portions of\n        solvent B are more efficient than a single extraction with the total\n        volume of solvent B.\n      </p>\n      <p>\n        If several different solutes (P, Q, R) are dissolved in an organic\n        solvent, then shaking the solution with water will extract small amounts\n        of each into the aqueous layer, but not allow for a clean separation of\n        any one compound. However, if during the shaking we can run a reaction\n        which converts one of the solutes, P, into a product which is more\n        soluble in water than in the organic solvent (i.e., by converting it\n        into a charged ionic species, such as a conjugate base or conjugate\n        acid), the product will dissolve extensively in the aqueous layer and\n        thus can be separated from the other organic solutes. Now, if the\n        reaction can be reversed in the separated aqueous layer, we can recover\n        the original compound, P, separated from the other solutes, Q, and R.\n        Such a procedure is possible when the mixture contains an organic acid\n        (and/or base) that can be selectively converted to charged products\n        (salts).\n      </p>\n      <li>\n        <b>Acids and Bases in Organic Chemistry</b>\n      </li>\n      <p>\n        <b>Acids:</b>\n        <br />\n        RCOOH and ArCOOH (carboxylic acids)\n        <br />\n        ArOH (phenols), RSO<sub>3</sub>H (sulfonic acids)\n      </p>\n      <p>\n        <b>Bases:</b>\n        <br />\n        RNH<sub>2</sub> (amines), ArNH<sub>2</sub> (anilines)\n      </p>\n      <p>\n        The symbol R represents any alkyl group, such as CH<sub>3</sub>, C\n        <sub>2</sub>H<sub>5</sub>, etc. For an aromatic compound, such as C\n        <sub>6</sub>H<sub>6</sub> (benzene), the symbol Ar is used. Organic\n        acids and bases react in the same way as inorganic acids and bases, as\n        can be shown by the following reaction schemes. However, organic acids\n        and bases are usually weaker.\n      </p>\n      <img\n        src={cache[\"./Extractionof2Unknowns_AcidBaseChart.png\"]}\n        alt=\"Acid-Base Chart\"\n      />\n\n\n      <p>\n        Of the three organic acid groups listed above, the sulfonic acids are\n        the strongest, followed by the carboxylic acids, and then the phenols.\n        The sulfonic acids, R-SO<sub>3</sub>H, where –SO<sub>3</sub>H is the\n        sulfonic acid group and R is the rest of the molecule, are strong acids,\n        close in strength to sulfuric acid. The carboxylic acids, R-COOH, have\n        the carboxyl group –COOH, with a pK\n        <sub>\n          <i>a</i>\n        </sub>\n        of 4 to 7, depending on the rest of the molecule. The phenol group, in\n        which –OH is attached to a benzene ring, is the weakest of the common\n        organic acid groups, with a pK\n        <sub>\n          <i>a</i>\n        </sub>\n        of around 10.\n      </p>\n      <p>\n        Because the hydroxide ion (OH-) is a strong base, it will deprotonate\n        both type of acids, both the weak carboxylic acid and the very weak\n        phenol. Deprotonation produces the conjugate bases, the carboxylate ion\n        (R-COO-) and the phenoxide ion (Ar-O-).\n      </p>\n      <p>\n        Bicarbonate ion (HCO<sub>3</sub>-) is a weak base. It is strong enough\n        to deprotonate the carboxyl group but not the phenol group. Since most\n        ions are soluble in water, deprotonation of these acids is a way of\n        making them water-soluble. Extraction of an ether solution of benzoic\n        acid and naphthalene with aqueous sodium hydroxide will separate these\n        compounds by drawing the benzoic acid, as its conjugate base, into the\n        aqueous phase. This is the principle behind this week’s experiment.\n      </p>\n      <li>\n        <b>Flow Diagrams</b>\n      </li>\n      <p>\n        Procedures for the separation and purification of components of complex\n        mixtures are commonly summarized by <u>flow diagrams</u>, in which each\n        box represents a phase (solid, liquid, or vapor) or container, and\n        connecting arrows represent operations (filter, extract, boil) or\n        addition of reagents. The name of the phase or container is written\n        above each box, and symbols, formulas, etc., for all of the components\n        of the phase are written inside each box. Operations and/or reagents are\n        written under or next to appropriate arrows. Separation of phases is\n        shown by a split in the arrow, leading to two boxes. See the sample flow\n        diagram at the end of this experiment.\n      </p>\n    </ol>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    <ol>\n      <li>\n        Calculate total % recovery.\n        <p>Total % recovery = % A + % B</p>\n        <img\n          src={cache[\"./Extractionof2Unknowns_StudyQuestions_2.png\"]}\n          alt=\"Sample Calculations\"\n        />\n\n      </li>\n      <li>\n        Draw a flow diagram for the extraction and separation you performed on\n        your unknown mixture. (See the sample flow diagram on next page).\n      </li>\n    </ol>\n  </div>\n);\n\nconst study_questions = () => (\n  <div>\n    <ol>\n      <li>\n        Give the names and structures of two functional groups in organic\n        chemistry that are acidic.\n      </li>\n      <li>\n        A mixture contains the following three compounds:\n        <img\n          src={cache[\"./Extractionsof2Unknowns_StudyQuestions.png\"]}\n          alt=\"Three Compounds\"\n        />\n        <p>\n          An ether solution of this mixture is extracted with sodium bicarbonate\n          solution to form aqueous layer A and organic layer B. The organic\n          layer B is then extracted with sodium hydroxide solution to form\n          aqueous layer C and organic layer D. Both solutions A and C are\n          separately treated with hydrochloric acid to give solutions E and F\n          respectively. Give the structure(s) of the organic solute(s) present\n          in A, B, C, D, E, and F.\n        </p>\n        <p>\n          <b>Explain.</b> Include a flow diagram.\n        </p>\n      </li>\n      <li>\n        Suppose you do not know which layer in your separatory funnel is the\n        aqueous layer, and you have no information about the density of the\n        solvent, how could you determine which is the aqueous layer?\n      </li>\n    </ol>\n  </div>\n);\n\nconst discussion = () => (\n  <div>\n    <p>\n      Be sure to discuss the role of the base in the extractions and how the\n      components are separated. Include the experimental and literature melting\n      point values and the % recovery of each component.\n    </p>{\" \"}\n  </div>\n);\n\nconst waste_disposal = () => (\n  <div>\n    <p>\n      <div class=\"a\">\n        <b>Week 1</b>\n      </div>\n    </p>\n    <ol>\n      <li>\n        <u>Separatory funnel</u>\n      </li>\n      <ol type=\"I\">\n        <li>\n          Rinse the separatory funnel and the stopper with acetone. Discard the\n          acetone rinsings into the halogenated waste bottle.\n        </li>\n        <li>\n          Wash with detergent and water, and then rinse with distilled water.\n        </li>\n        <li>Disassemble the stopcock assembly.</li>\n        <li>\n          Give separatory funnel, stopper, and the stopcock assembly parts to\n          your instructor.\n        </li>\n      </ol>\n      <li>\n        <u>Sodium Sulfate, the Drying Reagent</u>\n      </li>\n      <ol type=\"I\">\n        <li>\n          Transfer it into the waste container labeled “Non-Halogenated Solid\n          Waste.\"\n        </li>\n        <li>\n          Rinse the Erlenmeyer flask with acetone and transfer into the\n          Halogenated waste bottle.\n        </li>\n        <li>\n          Wash the Erlenmeyer flask with detergent and water. Then rinse it with\n          distilled water.\n        </li>\n        <li>\n          Discard filter paper into jar labeled filter paper from extraction\n          experiment\n        </li>\n      </ol>\n      <li>\n        <u>Vial containing the Unknown sample</u>\n      </li>\n      <ol type=\"I\">\n        <li>Keep it in your drawer.</li>\n      </ol>\n      <li>\n        <ul>Glassware used only for inorganic reagents</ul>\n        <p>\n          <b>DO NOT RINSE WITH ACETONE</b>\n        </p>\n        <p>\n          Wash with detergent and water. Then rinse it with distilled water.\n        </p>\n      </li>\n    </ol>\n  </div>\n);\n\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div> \n      Procedure 1\n    </div>\n  )\n\n  const procedure_2 = () => (\n    <div> \n      Procedure 2\n    </div>\n  )\n\n  const procedureArray = [procedure_1(), procedure_2()]\n  return procedureArray\n\n}\n\n\n\n\nconst Experiment_8 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_8;\n","import React from \"react\";\n\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\n\n\n\nconst prelab_assignment = () => (\n  <div>\n    <p>\n      In your notebook, prepare a Table of Physical Constants for benzoic acid,\n      2-chlorobenzoic acid, salicylic acid (2-hydroxybenzoic acid), naphthalene,\n      1,4-dimethoxybenzene (hydroquinone dimethyl ether), 1,4-dichlorobenzene,\n      ethyl acetate, and water.\n    </p>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <ol>\n      <li>\n        <b>Theory of Extraction</b>\n      </li>\n      <p>\n        The transfer of a solute from one phase to another is a very common\n        technique in organic chemistry. It is called extraction, and it is also\n        a common technique in everyday life. When you steep a tea bag in boiling\n        water, add a bay leaf to a pot of soup, or wash a load of laundry, you\n        are performing a solid/liquid extraction, in which a solution containing\n        several components is mixed with a second, immiscible liquid, for the\n        purpose of extracting one component of the solution into the second\n        solvent.\n      </p>\n      <p>\n        We have seen that recrystallization is used to purify solids that are\n        contaminated by relatively small amounts of impurities. By contrast, the\n        technique of extraction is a more “coarse” or preliminary technique, in\n        that it can be used to separate one compound from another or from large\n        amounts of impurities.\n      </p>\n      <p>\n        Most <u>uncharged</u> organic molecules are more soluble in organic\n        solvents than in water. If the organic solvent itself is not very\n        soluble in water, then when the solvent or one of its solutions is mixed\n        with water, two layers will form, and the solvents are said to be{\" \"}\n        <u>immiscible</u>. The layers are called the <u>organic layer</u> and\n        the <u>aqueous layer</u>. If the two layers are shaken together, small\n        amounts of the components of the organic layer will dissolve in (or be\n        extracted into) the aqueous layer, and small amounts of the aqueous\n        layer components will dissolve (be extracted into) the organic layer,\n        establishing equilibrium between the two layers. Thus, if a neutral\n        compound C is initially dissolved in one layer (phase), it will be\n        distributed, or “partitioned,” between the two layers at equilibrium.\n        The distribution is expressed quantitatively in terms of the\n        coefficient, <b>K</b>. Ideally, the distribution coefficient of compound\n        C is equal to the ratio of the individual solubilities of C in pure\n        solvent, <b>S</b>, and in pure water, <b>W</b>.\n      </p>\n      <img src={cache[\"./Extractionof2Unknowns_K.png\"]} alt=\"K Equation\" />\n\n      <p>\n        For extraction of solute from solvent A into solvent B with a given\n        volume of solvent B, several extractions each with small portions of\n        solvent B are more efficient than a single extraction with the total\n        volume of solvent B.\n      </p>\n      <p>\n        If several different solutes (P, Q, R) are dissolved in an organic\n        solvent, then shaking the solution with water will extract small amounts\n        of each into the aqueous layer, but not allow for a clean separation of\n        any one compound. However, if during the shaking we can run a reaction\n        which converts one of the solutes, P, into a product which is more\n        soluble in water than in the organic solvent (i.e., by converting it\n        into a charged ionic species, such as a conjugate base or conjugate\n        acid), the product will dissolve extensively in the aqueous layer and\n        thus can be separated from the other organic solutes. Now, if the\n        reaction can be reversed in the separated aqueous layer, we can recover\n        the original compound, P, separated from the other solutes, Q, and R.\n        Such a procedure is possible when the mixture contains an organic acid\n        (and/or base) that can be selectively converted to charged products\n        (salts).\n      </p>\n      <li>\n        <b>Acids and Bases in Organic Chemistry</b>\n      </li>\n      <p>\n        <b>Acids:</b>\n        <br />\n        RCOOH and ArCOOH (carboxylic acids)\n        <br />\n        ArOH (phenols), RSO<sub>3</sub>H (sulfonic acids)\n      </p>\n      <p>\n        <b>Bases:</b>\n        <br />\n        RNH<sub>2</sub> (amines), ArNH<sub>2</sub> (anilines)\n      </p>\n      <p>\n        The symbol R represents any alkyl group, such as CH<sub>3</sub>, C\n        <sub>2</sub>H<sub>5</sub>, etc. For an aromatic compound, such as C\n        <sub>6</sub>H<sub>6</sub> (benzene), the symbol Ar is used. Organic\n        acids and bases react in the same way as inorganic acids and bases, as\n        can be shown by the following reaction schemes. However, organic acids\n        and bases are usually weaker.\n      </p>\n      <img\n        src={cache[\"./Extractionof2Unknowns_AcidBaseChart.png\"]}\n        alt=\"Acid-Base Chart\"\n      />\n      <p>\n        Of the three organic acid groups listed above, the sulfonic acids are\n        the strongest, followed by the carboxylic acids, and then the phenols.\n        The sulfonic acids, R-SO<sub>3</sub>H, where –SO<sub>3</sub>H is the\n        sulfonic acid group and R is the rest of the molecule, are strong acids,\n        close in strength to sulfuric acid. The carboxylic acids, R-COOH, have\n        the carboxyl group –COOH, with a pK\n        <sub>\n          <i>a</i>\n        </sub>\n        of 4 to 7, depending on the rest of the molecule. The phenol group, in\n        which –OH is attached to a benzene ring, is the weakest of the common\n        organic acid groups, with a pK\n        <sub>\n          <i>a</i>\n        </sub>\n        of around 10.\n      </p>\n      <p>\n        Because the hydroxide ion (OH-) is a strong base, it will deprotonate\n        both type of acids, both the weak carboxylic acid and the very weak\n        phenol. Deprotonation produces the conjugate bases, the carboxylate ion\n        (R-COO-) and the phenoxide ion (Ar-O-).\n      </p>\n      <p>\n        Bicarbonate ion (HCO<sub>3</sub>-) is a weak base. It is strong enough\n        to deprotonate the carboxyl group but not the phenol group. Since most\n        ions are soluble in water, deprotonation of these acids is a way of\n        making them water-soluble. Extraction of an ether solution of benzoic\n        acid and naphthalene with aqueous sodium hydroxide will separate these\n        compounds by drawing the benzoic acid, as its conjugate base, into the\n        aqueous phase. This is the principle behind this week’s experiment.\n      </p>\n      <li>\n        <b>Flow Diagrams</b>\n      </li>\n      <p>\n        Procedures for the separation and purification of components of complex\n        mixtures are commonly summarized by <u>flow diagrams</u>, in which each\n        box represents a phase (solid, liquid, or vapor) or container, and\n        connecting arrows represent operations (filter, extract, boil) or\n        addition of reagents. The name of the phase or container is written\n        above each box, and symbols, formulas, etc., for all of the components\n        of the phase are written inside each box. Operations and/or reagents are\n        written under or next to appropriate arrows. Separation of phases is\n        shown by a split in the arrow, leading to two boxes. See the sample flow\n        diagram at the end of this experiment.\n      </p>\n    </ol>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    <ol>\n      <li>\n        Calculate total % recovery.\n        <p>Total % recovery = % A + % B</p>\n        <img\n          src={cache[\"./Extractionof2Unknowns_StudyQuestions_2.png\"]}\n          alt=\"Sample Calculations\"\n        />\n      </li>\n      <li>\n        Draw a flow diagram for the extraction and separation you performed on\n        your unknown mixture. (See the sample flow diagram on next page).\n      </li>\n    </ol>\n  </div>\n);\n\nconst study_questions = () => (\n  <div>\n    <ol>\n      <li>\n        Give the names and structures of two functional groups in organic\n        chemistry that are acidic.\n      </li>\n      <li>\n        A mixture contains the following three compounds:\n        <img\n          src={cache[\"./Extractionsof2Unknowns_StudyQuestions.png\"]}\n          alt=\"Three Compounds\"\n        />\n        <p>\n          An ether solution of this mixture is extracted with sodium bicarbonate\n          solution to form aqueous layer A and organic layer B. The organic\n          layer B is then extracted with sodium hydroxide solution to form\n          aqueous layer C and organic layer D. Both solutions A and C are\n          separately treated with hydrochloric acid to give solutions E and F\n          respectively. Give the structure(s) of the organic solute(s) present\n          in A, B, C, D, E, and F.\n        </p>\n        <p>\n          <b>Explain.</b> Include a flow diagram.\n        </p>\n      </li>\n      <li>\n        Suppose you do not know which layer in your separatory funnel is the\n        aqueous layer, and you have no information about the density of the\n        solvent, how could you determine which is the aqueous layer?\n      </li>\n    </ol>\n  </div>\n);\n\nconst discussion = () => (\n  <div>\n    <p>\n      Be sure to discuss the role of the base in the extractions and how the\n      components are separated. Include the experimental and literature melting\n      point values and the % recovery of each component.\n    </p>\n  </div>\n);\n\nconst waste_disposal = () => (\n  <div>\n    <p>\n      <div class=\"a\">\n        <b>Week 2</b>\n      </div>\n    </p>\n    <ol>\n      <li>\n        <u>Solid components in the RBFs</u>\n      </li>\n      <ol type=\"I\">\n        <li>Dissolve both in minimum amount of acetone.</li>\n        <li>\n          Transfer into the <u>appropriate</u> waste container (by now you know\n          whether either of the components in your\n          <u>unknown is halogenated or not).</u>\n        </li>\n        <li>\n          Wash with detergent and water. Then rinse it with distilled water.\n        </li>\n      </ol>\n      <li>\n        <u>Weighing paper used to prepare sample for melting point</u>\n      </li>\n      <ol type=\"I\">\n        <li>Brush the solid into the appropriate solid waste container.</li>\n        <li>Discard paper in regular trash.</li>\n      </ol>\n      <li>\n        <u>Melting Point Capillaries</u>\n      </li>\n      <ol type=\"I\">\n        <li>Discard into the plastic beaker labeled “Used Capillaries”.</li>\n        <img src={cache[\"./Extractionof2Unknowns_FlowChart.png\"]} alt=\"Flow Chart\" />\n      </ol>\n    </ol>\n  </div>\n);\n\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div> \n      Procedure 1\n    </div>\n  )\n\n  const procedure_2 = () => (\n    <div> \n      Procedure 2\n    </div>\n  )\n\n  const procedureArray = [procedure_1(), procedure_2()]\n  return procedureArray\n\n}\n\n\nconst Experiment_9 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_9;\n","import React from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\n\n\nconst prelab_assignment = () => (\n  <div>\n    <ol>\n      <li>\n        Prepare a Table of Physical Constants for ethyl acetate and 1-butanol.\n      </li>\n      <li>\n        Prepare a table for recording the vapor temperatures and volumes of\n        distillate for your distillation.\n      </li>\n    </ol>\n    <img src={cache[\"./Distillation_SampleTable.png\"]}  alt=\"Sample Table\" />\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <p>\n      Distillation is yet another method used to purify and/or separate organic\n      compounds. Recrystallization is used to purify compounds that are solids\n      at room temperature; distillation is used to purify compounds that are\n      liquids at room temperature.\n    </p>\n    <p>\n      In order to understand distillation, we must first consider the physical\n      property upon which the process is based, the boiling point of a liquid.\n      The boiling point may be defined as the temperature at which the vapor\n      pressure of a liquid is equal to the external pressure. Thus, the boiling\n      point of a liquid is directly proportional to the pressure above the\n      liquid. (Note: When heated in an open container, a liquid will boil when\n      its vapor pressure equals atmospheric pressure.) Applying increasing\n      amounts of heat to a boiling liquid will cause it to boil faster (move\n      molecules from the liquid to the gas phase faster), and will not increase\n      the temperature of the liquid.\n    </p>\n    <p>\n      Distillation is the process in which a liquid is evaporated (boiled), and\n      its vapor condensed and collected. The simplest example of how\n      distillation can be used to purify compounds is the distillation of a\n      mixture containing one volatile and one non-volatile compound. The\n      volatile component vaporizes, leaving the non-volatile compound behind.\n      Thus, condensing and collecting the vapor will yield a pure sample of the\n      volatile compound. Separation of a mixture of two or more volatile\n      compounds is more complex. According to Raoult’s Law, the partial pressure\n      of a liquid in the vapor above a solution is equal to the vapor pressure\n      of the pure liquid times its mole fraction in the solution (P<sub>1</sub>{\" \"}\n      = P<sup>0</sup>X<sub>1</sub>). The total pressure above a mixture of\n      miscible liquids is equal to the sum of the partial pressures of each of\n      the liquids (P<sub>T</sub> = P<sup>0</sup>\n      <sub>1</sub>X<sub>1</sub> + P<sup>0</sup>\n      <sub>2</sub>X<sub>2</sub> + …). Since the vapor pressure of a liquid is\n      inversely proportional to its boiling point, the vapor above a mixture of\n      two miscible liquids contains a higher proportion of lower boiling\n      component than did the original mixture. (Consider a solution containing\n      50% A, b.p. 75 &#176;C + 50% B, b.p. 100 &#176;C. When the solution is\n      heated to its boiling point, the vapor above the boiling mixture will\n      contain &gt;50% A and &lt;50% B, therefore, the ratio of A:B will be\n      higher in the vapor than in the original solution.) Consequently, as the\n      vapor is removed by distillation, the liquid mixture becomes increasingly\n      richer in the higher boiling component, and its boiling temperature rises.\n    </p>\n    <p>\n      If the vapor above the boiling liquid were condensed and revaporized, it\n      would produce new vapor, which was even richer in the lower boiling\n      component than the first vapor. An infinite series of these vaporizations,\n      condensations, and revaporizations would eventually lead to a vapor that\n      contained only the lower boiling component. If the lower boiling point\n      component could be selectively removed as it is formed, the two liquids\n      could be separated.\n    </p>\n    <p>\n      In practice, it is not necessary to repeat several separate distillations,\n      because the process called fractional distillation accomplishes multiple\n      distillations in one mechanical step. In a fractional distillation, the\n      mixture of liquids is heated to boiling in the distilling flask (pot). The\n      vapor rises up the fractionating column until it hits a cool surface\n      provided by the packing. The vapor cools, condenses, and begins to run\n      down the column. While this is occurring, heating of the pot continues.\n      Since the vapor removed at first was richer in the lower boiling\n      component, the mixture in the pot has become richer in the higher boiling\n      component, so its boiling point is higher and the temperature of the new\n      rising vapor, #2, is hotter than that of the first vapor, #1. This new\n      rising vapor, #2, hits the condensed vapor, #1, and transfers heat,\n      causing #1 to boil, forming new vapor #3, which is now the richest of all\n      in the lower boiling component. Vapor #3 rises in the column where it hits\n      a new cool surface, condenses, starts down the column where it is\n      “greeted” by hotter vapor; it revaporizes, rises further in the column,\n      and so on. In this way, a temperature gradient is established along the\n      column, with the hottest temperatures at the bottom (richest in high\n      boiling compound) and increasingly cooler temperatures toward the still\n      head (richest in lower boiling compound). Eventually, when the purest\n      sample of the lower boiling component reaches the still head (where the\n      thermometer is located), it enters the condenser and is collected.\n    </p>\n    <p>\n      A plot of the stillhead temperature (temperature of the vapor about to be\n      condensed) vs. mL of distillate collected for distillations of various\n      efficiencies is shown in Figure 1.\n    </p>\n    <img src={cache[\"./Distillation_Temp.png\"]} alt=\"Temperature Graph\" />\n\n    <p>\n      In an ideal distillation, the entire lower boiling component distills at\n      its boiling point, then the vapor temperature rises sharply to the boiling\n      point of the higher boiling component and it distills. If the collecting\n      flask is changed when the temperature rises suddenly, the components will\n      be collected separately, giving a perfect separation!\n    </p>\n    <p>\n      In a fractional distillation, the early distillate distills at a\n      temperature a bit <u>above</u> the boiling point of the lower boiling\n      component. The last distillate comes over at a temperature slightly{\" \"}\n      <u>below</u> the higher boiling component. Liquid mixtures boil at\n      temperatures <u>between</u> the boiling points of the components.\n    </p>\n    <p>\n      n a simple distillation, the initial temperature is higher and the final\n      temperature is lower than in the fractional distillation. Also, note that\n      temperature rise is much more gradual than in the fractional distillation.\n    </p>\n    <p>\n      <u>Non-ideal solutions</u>\n    </p>\n    <p>\n      Although most homogeneous liquid mixtures behave as ideal solutions, there\n      are many examples known in which the behavior is non-ideal. In these\n      solutions, the dissimilar molecules are not indifferent to one another’s\n      presence. The resultant deviations from Raoult’s Law occur in either of\n      two directions. Some solutions display greater vapor pressures than\n      expected and are said to exhibit <u>positive deviation</u>. Others display\n      lower vapor pressures than expected and are said to exhibit{\" \"}\n      <u>negative deviation</u>.\n    </p>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    <ol>\n      <li>\n        Plot vapor temperature vs. distillate volumes for your fractional\n        distillation on a graph. This graph should be attached to your report\n        sheet under the Results section. On your graph, indicate the segments\n        corresponding to pure ethyl acetate, pure 1-butanol, and mixture.\n      </li>\n      <li>\n        Create a table containing the retention times for the standard mixture.\n      </li>\n      <li>\n        Calculate the percent of each component in each fraction and list them\n        in a table. Makes sure to include a sample calculation.\n      </li>\n    </ol>\n  </div>\n);\n\nconst study_questions = () => <div> ToDo </div>;\n\nconst discussion = () => (\n  <div>\n    <p>Additional points to be discussed:</p>\n    <p>\n      The shape of your plot of volume vs distillate temperatures. Whether you\n      changed the graduate cylinders at the correct temperatures according to\n      this plot.\n    </p>\n    <p>\n      Comparison of Boiling points of fractions 1 and 3 to the literature values\n      of ethyl acetate and 1-butanol.\n    </p>\n    <p>\n      Factors that contribute to the fractions 1 and 3 for not being pure\n      ethylacetate and 1-butanol.\n    </p>\n  </div>\n);\nconst waste_disposal = () => (\n  <div>\n    <ol>\n      <li>\n        <u>Fractions Collected in Graduated Cylinders</u>\n        <ol type=\"I\">\n          <li>Discard them into liquid non halogenated waste.</li>\n        </ol>\n      </li>\n      <li>\n        <u>Leftover Liquid in the RBF</u>\n        <ol type=\"I\">\n          <li>\n            Discard into liquid non halogenated waste PLEASE REMOVE MAGNETIC\n            STIR BAR BEFORE DISCARDING THE LIQUID.\n          </li>\n          <li>\n            Rinse magnetic stir bar with acetone in liquid non-halogenated\n            waste.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <u>\n          Cleaning of ALL glassware used in this experiment including\n          thermometer\n        </u>\n        <ol type=\"I\">\n          <li>Rinse with acetone into a beaker.</li>\n          <li>Transfer these rinsings into liquid non halogenated waste.</li>\n          <li>DO NOT WASH WITH WATER.</li>\n        </ol>\n      </li>\n    </ol>\n  </div>\n);\n\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div> \n      Procedure 1\n    </div>\n  )\n\n  const procedure_2 = () => (\n    <div> \n      Procedure 2\n    </div>\n  )\n\n  const procedureArray = [procedure_1(), procedure_2()]\n  return procedureArray\n\n}\n\n\nconst Experiment_10 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_10;\n","import React from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\n\nconst prelab_assignment = () => (\n  <div>\n    <img src={cache[\"./Dehydration_Scheme.png\"]} alt=\"Scheme\" />\n    <p>\n      In this experiment, we will set up an acid-catalyzed dehydration reaction\n      of 2-methylcyclohexanol (mixed cis- and trans- isomers) under reflux using\n      a West condenser to produce a mixture of methylcyclohexenes. Then using\n      simple distillation, the methylcyclohexenes ae collected.\n    </p>\n    <p>\n      The product mixture will be analyzed using infrared spectroscopy. The\n      identity and relative amount of each product will be determined using gas\n      chromatography. The experiment is derived from “Dehydration of\n      Cyclohexanol” in C.F. Most, p. 335 (Wiley, 1988).\n    </p>\n    <ol>\n      <li>\n        Write the balanced equation using structures for the dehydration of\n        2-methylcyclohexanol in your notebook.\n      </li>\n      <li>\n        Prepare a Table with all required information for calculating\n        theoretical yield for this reaction. A sample table showing the required\n        information is on pp.\n      </li>\n    </ol>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <p>\n      <b>Gas Chromatography (GC)</b> (Vapor Phase Chromatography--VPC)\n    </p>\n    <p>\n      As you learned in the Column Chromatography experiment, chromatography is\n      a general method for separating a mixture of two or more components and\n      obtaining each of the components in a pure state. All types of\n      chromatography utilize a two-phase system, consisting of a mobile phase\n      and a stationary phase.\n    </p>\n    <p>\n      Generally, the mixture to be separated is applied to one end of the\n      stationary phase and carried through the system by the mobile phase. The\n      system is chosen such that the components of the mixture have different\n      affinities for the stationary and mobile phases. Thus, as the mobile phase\n      carries the mixture over the stationary phase, the components of the\n      mixture reach different equilibria between the stationary and mobile\n      phases, and are “washed” through the system at different rates. If the\n      composition of the mobile phase is analyzed as the mobile phase exits the\n      system, different results will be obtained as time passes.\n    </p>\n    <p>\n      If a mixture of Compounds A, B, and C is applied to the chromatography\n      system and the composition of the exiting mobile phase is monitored over\n      time, the following would be found:\n    </p>\n    <p>\n      Initially, the mobile phase would consist only of the mobile phase\n      component (gas or liquid).\n    </p>\n    <p>After a few minutes, Compound A would be detected.</p>\n    <p>\n      As time passes, Compound A would decrease in amount and then Compound B\n      would be detected.\n    </p>\n    <p>\n      At later times, Compound B would decrease in amount and finally Compound C\n      would be detected.\n    </p>\n    <p>\n      The lapse in time from the injection of a compound to its exit from the\n      column is called its “<b>retention time</b>”. Each compound has a\n      characteristic retention time, which depends upon the length of the\n      column, carrier gas flow rate, the temperature of the column, injection\n      block temperature, and the nature of the stationary phase.\n    </p>\n    <p>\n      In GC, as the name suggests, the mobile phase is a gas (usually N\n      <sub>2</sub>, He, Ne, or Ar). The stationary phase is either a solid, or\n      more often a liquid that is coated on solid particles. Usually, the\n      stationary phase particles are packed into glass or stainless steel tubing\n      and the mobile gas phase (carrier gas) flows through the tubing. This\n      packed tubing is called the chromatography “column.” Nowadays, capillary\n      columns are used. The most advantage of capillary GC column is the\n      separation efficiency and sensitivity enhancement as against the normal\n      packed columns due to the distance travelled by the analyte (sample\n      injected). These columns are open tubular columns, made of fused silica\n      with a polyimide coating on the outside surface. The stationary phase is\n      coated inside the tubing as a very thin layer (usually micrometer\n      thickness). The column length can be as long as 100 m. The internal\n      diameter of the tubing can vary from 0.1 mm to 0.53 mm or slightly more.\n      These columns will give much better separation for complex samples.\n    </p>\n    <p>\n      As the gas flows out of the column, it passes through a detecting device,\n      which senses the ability of the gas to conduct heat. When compounds other\n      than the carrier gas are present, the conductivity of the gas mixture\n      increases and the detector sends an increased signal to a recorder. The\n      results of a separation such as that described for compounds A, B, and C\n      is shown below.\n    </p>\n    <img src={cache[\"./Dehydration_prelabchart.png\"]} alt=\"Dehydration Chart\" />\n    <p>\n      The relative amount of each component (A, B, or C) can be determined by\n      calculating the area under the peak corresponding to each component and\n      applying an appropriate sensitivity factor for the ability of the detector\n      to sense each compound.\n    </p>\n    <p>\n      A simple and reasonably accurate method for determining the areas of peaks\n      is to treat them as symmetric triangles. Using this method, the area of a\n      peak is calculated by first measuring its vertical height and then the\n      width of the peak at half its height. The area is the product of the\n      height and the width at half-height.\n    </p>\n    <img src={cache[\"./Dehydration_PeakMathChart.png\"]} alt=\"Peach Math Calculation\" />\n    <p>The mole % of each component can be determined as follows:</p>\n    <p>\n      (1) Multiply the areas by the appropriate molar sensitivity factors to get\n      the corrected areas.\n    </p>\n    <p>\n      (2) Calculate the % that each corrected area is of the sum of the\n      corrected areas. (Note: Sensitivity factors are experimentally\n      determined.)\n    </p>\n    <img\n      src={cache[\"./Dehydration_PeakPercentageChart.png\"]}\n      alt=\"Peak Percentage Chart\"\n    />\n    <p>\n      Thus, the original mixture consisted of 42.5% A, 26.1% B, and 31.3% C.\n    </p>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    <ol>\n      <li>\n        Calculate the percent yield, assuming that the distillate is 100 percent\n        mixed methylcyclohexenes.\n      </li>\n      <li>\n        From the gas chromatography trace of the standard compounds distributed\n        to you, identify each product (and solvent, if any) by retention times.\n        Label the peaks on the both chromatograms and attach them to the report\n        sheet. Be sure to note the conditions used to produce and record your\n        chromatography trace.\n      </li>\n      <li>\n        On your IR spectra, label the important peaks and draw the structure(s)\n        of the compound(s).\n      </li>\n      <li>\n        Based on the results obtained in your experiment, formulate a mechanism\n        that will account for all observed products.\n      </li>\n    </ol>\n  </div>\n);\n\nconst study_questions = () => <div> To Do </div>;\n\nconst discussion = () => (\n  <div>\n    <p>\n      Make sure to discuss the GC and IR results, as well as the % yield and the\n      success of the separation. Discuss major and minor products of this\n      reaction and the stability of the products and intermediates.\n    </p>\n    <p>\n      If the IR spectrum of your product indicates the presence of any unreacted\n      starting material, then this should be addressed as well.\n    </p>\n  </div>\n);\nconst waste_disposal = () => (\n  <div>\n    <ol>\n      <li>\n        <u>One Piece Distillation Glassware</u>\n        <ol type=\"I\">\n          <li>Rinse with acetone a couple times into a beaker.</li>\n          <li>\n            {\" \"}\n            Transfer these rinsings into liquid non-halogenated waste bottle in\n            your hood.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <u>RBF, Thermometer, and Magnetic stir bar</u>\n        <ol type=\"I\">\n          <li>Rinse with acetone a couple times into a beaker.</li>\n          <li>\n            Transfer these rinsings into liquid non-halogenated waste bottle in\n            your hood.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <u>Potassium Carbonate Drying Agent</u>\n        <ol type=\"I\">\n          <li>\n            Transfer into waste container labeled non-halogenated solid waste.\n          </li>\n          <li>\n            Rinse centrifuge tube with acetone and transfer into the\n            non-halogenated waste bottle in your hood.\n          </li>\n          <li>\n            Wash the centrifuge tube with detergent and water. Then rinse it\n            with distilled water.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <u>Product Vial</u>\n        <ol type=\"I\">\n          <li>\n            Rinse with acetone a few times and discard into the non-halogenated\n            waste bottle in your hood.\n          </li>\n          <li>Keep vial and plastic cap in fume hood.</li>\n        </ol>\n      </li>\n      <li>\n        <u>Sand</u>\n        <ol type=\"I\">\n          <li>Transfer sand into beaker and put it into labeled container.</li>\n          <li>\n            Remove residual sand from fume hood using broom and dust pan and\n            discard into trash.\n          </li>\n        </ol>\n      </li>\n    </ol>\n  </div>\n);\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div> \n      Procedure 1\n    </div>\n  )\n\n  const procedure_2 = () => (\n    <div> \n      Procedure 2\n    </div>\n  )\n\n  const procedureArray = [procedure_1(), procedure_2()]\n  return procedureArray\n\n}\n\n\n\nconst Experiment_11 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_11;\n","import React from \"react\";\n\nconst cache = {};\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)));\n}\nimportAll(require.context(\"../assets/images/\", false, /\\.png$/));\n\nconst prelab_assignment = () => (\n  <div>\n    <img src={cache[\"./Dehydration_Scheme.png\"]} alt=\"Scheme\" />\n    <p>\n      In this experiment, we will set up an acid-catalyzed dehydration reaction\n      of 2-methylcyclohexanol (mixed cis- and trans- isomers) under reflux using\n      a West condenser to produce a mixture of methylcyclohexenes. Then using\n      simple distillation, the methylcyclohexenes ae collected.\n    </p>\n    <p>\n      The product mixture will be analyzed using infrared spectroscopy. The\n      identity and relative amount of each product will be determined using gas\n      chromatography. The experiment is derived from “Dehydration of\n      Cyclohexanol” in C.F. Most, p. 335 (Wiley, 1988).\n    </p>\n    <ol>\n      <li>\n        Write the balanced equation using structures for the dehydration of\n        2-methylcyclohexanol in your notebook.\n      </li>\n      <li>\n        Prepare a Table with all required information for calculating\n        theoretical yield for this reaction. A sample table showing the required\n        information is on pp.\n      </li>\n    </ol>\n  </div>\n);\n\nconst background = () => (\n  <div>\n    <p>\n      <b>Gas Chromatography (GC)</b> (Vapor Phase Chromatography--VPC)\n    </p>\n    <p>\n      As you learned in the Column Chromatography experiment, chromatography is\n      a general method for separating a mixture of two or more components and\n      obtaining each of the components in a pure state. All types of\n      chromatography utilize a two-phase system, consisting of a mobile phase\n      and a stationary phase.\n    </p>\n    <p>\n      Generally, the mixture to be separated is applied to one end of the\n      stationary phase and carried through the system by the mobile phase. The\n      system is chosen such that the components of the mixture have different\n      affinities for the stationary and mobile phases. Thus, as the mobile phase\n      carries the mixture over the stationary phase, the components of the\n      mixture reach different equilibria between the stationary and mobile\n      phases, and are “washed” through the system at different rates. If the\n      composition of the mobile phase is analyzed as the mobile phase exits the\n      system, different results will be obtained as time passes.\n    </p>\n    <p>\n      If a mixture of Compounds A, B, and C is applied to the chromatography\n      system and the composition of the exiting mobile phase is monitored over\n      time, the following would be found:\n    </p>\n    <p>\n      Initially, the mobile phase would consist only of the mobile phase\n      component (gas or liquid).\n    </p>\n    <p>After a few minutes, Compound A would be detected.</p>\n    <p>\n      As time passes, Compound A would decrease in amount and then Compound B\n      would be detected.\n    </p>\n    <p>\n      At later times, Compound B would decrease in amount and finally Compound C\n      would be detected.\n    </p>\n    <p>\n      The lapse in time from the injection of a compound to its exit from the\n      column is called its “<b>retention time</b>”. Each compound has a\n      characteristic retention time, which depends upon the length of the\n      column, carrier gas flow rate, the temperature of the column, injection\n      block temperature, and the nature of the stationary phase.\n    </p>\n    <p>\n      In GC, as the name suggests, the mobile phase is a gas (usually N\n      <sub>2</sub>, He, Ne, or Ar). The stationary phase is either a solid, or\n      more often a liquid that is coated on solid particles. Usually, the\n      stationary phase particles are packed into glass or stainless steel tubing\n      and the mobile gas phase (carrier gas) flows through the tubing. This\n      packed tubing is called the chromatography “column.” Nowadays, capillary\n      columns are used. The most advantage of capillary GC column is the\n      separation efficiency and sensitivity enhancement as against the normal\n      packed columns due to the distance travelled by the analyte (sample\n      injected). These columns are open tubular columns, made of fused silica\n      with a polyimide coating on the outside surface. The stationary phase is\n      coated inside the tubing as a very thin layer (usually micrometer\n      thickness). The column length can be as long as 100 m. The internal\n      diameter of the tubing can vary from 0.1 mm to 0.53 mm or slightly more.\n      These columns will give much better separation for complex samples.\n    </p>\n    <p>\n      As the gas flows out of the column, it passes through a detecting device,\n      which senses the ability of the gas to conduct heat. When compounds other\n      than the carrier gas are present, the conductivity of the gas mixture\n      increases and the detector sends an increased signal to a recorder. The\n      results of a separation such as that described for compounds A, B, and C\n      is shown below.\n    </p>\n    <img src={cache[\"./Dehydration_prelabchart.png\"]} alt=\"Dehydration Chart\" />\n    <p>\n      The relative amount of each component (A, B, or C) can be determined by\n      calculating the area under the peak corresponding to each component and\n      applying an appropriate sensitivity factor for the ability of the detector\n      to sense each compound.\n    </p>\n    <p>\n      A simple and reasonably accurate method for determining the areas of peaks\n      is to treat them as symmetric triangles. Using this method, the area of a\n      peak is calculated by first measuring its vertical height and then the\n      width of the peak at half its height. The area is the product of the\n      height and the width at half-height.\n    </p>\n    <img src={cache[\"./Dehydration_PeakMathChart.png\"]} alt=\"Peach Math Calculation\" />\n    <p>The mole % of each component can be determined as follows:</p>\n    <p>\n      (1) Multiply the areas by the appropriate molar sensitivity factors to get\n      the corrected areas.\n    </p>\n    <p>\n      (2) Calculate the % that each corrected area is of the sum of the\n      corrected areas. (Note: Sensitivity factors are experimentally\n      determined.)\n    </p>\n    <img\n      src={cache[\"./Dehydration_PeakPercentageChart.png\"]}\n      alt=\"Peak Percentage Chart\"\n    />\n    <p>\n      Thus, the original mixture consisted of 42.5% A, 26.1% B, and 31.3% C.\n    </p>\n  </div>\n);\n\nconst results = () => (\n  <div>\n    <ol>\n      <li>\n        Calculate the percent yield, assuming that the distillate is 100 percent\n        mixed methylcyclohexenes.\n      </li>\n      <li>\n        From the gas chromatography trace of the standard compounds distributed\n        to you, identify each product (and solvent, if any) by retention times.\n        Label the peaks on the both chromatograms and attach them to the report\n        sheet. Be sure to note the conditions used to produce and record your\n        chromatography trace.\n      </li>\n      <li>\n        On your IR spectra, label the important peaks and draw the structure(s)\n        of the compound(s).\n      </li>\n      <li>\n        Based on the results obtained in your experiment, formulate a mechanism\n        that will account for all observed products.\n      </li>\n    </ol>\n  </div>\n);\n\nconst study_questions = () => <div> To Do </div>;\n\nconst discussion = () => (\n  <div>\n    <p>\n      Make sure to discuss the GC and IR results, as well as the % yield and the\n      success of the separation. Discuss major and minor products of this\n      reaction and the stability of the products and intermediates.\n    </p>\n    <p>\n      If the IR spectrum of your product indicates the presence of any unreacted\n      starting material, then this should be addressed as well.\n    </p>\n  </div>\n);\nconst waste_disposal = () => (\n  <div>\n    <ol>\n      <li>\n        <u>One Piece Distillation Glassware</u>\n        <ol type=\"I\">\n          <li>Rinse with acetone a couple times into a beaker.</li>\n          <li>\n            {\" \"}\n            Transfer these rinsings into liquid non-halogenated waste bottle in\n            your hood.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <u>RBF, Thermometer, and Magnetic stir bar</u>\n        <ol type=\"I\">\n          <li>Rinse with acetone a couple times into a beaker.</li>\n          <li>\n            Transfer these rinsings into liquid non-halogenated waste bottle in\n            your hood.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <u>Potassium Carbonate Drying Agent</u>\n        <ol type=\"I\">\n          <li>\n            Transfer into waste container labeled non-halogenated solid waste.\n          </li>\n          <li>\n            Rinse centrifuge tube with acetone and transfer into the\n            non-halogenated waste bottle in your hood.\n          </li>\n          <li>\n            Wash the centrifuge tube with detergent and water. Then rinse it\n            with distilled water.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <u>Product Vial</u>\n        <ol type=\"I\">\n          <li>\n            Rinse with acetone a few times and discard into the non-halogenated\n            waste bottle in your hood.\n          </li>\n          <li>Keep vial and plastic cap in fume hood.</li>\n        </ol>\n      </li>\n      <li>\n        <u>Sand</u>\n        <ol type=\"I\">\n          <li>Transfer sand into beaker and put it into labeled container.</li>\n          <li>\n            Remove residual sand from fume hood using broom and dust pan and\n            discard into trash.\n          </li>\n        </ol>\n      </li>\n    </ol>\n  </div>\n);\n\n\nconst procedure = () => {\n  const procedure_1 = () => (\n    <div> \n      Procedure 1\n    </div>\n  )\n\n  const procedure_2 = () => (\n    <div> \n      Procedure 2\n    </div>\n  )\n\n  const procedureArray = [procedure_1(), procedure_2()]\n  return procedureArray\n\n}\n\n\nconst Experiment_12 = {\n  prelab_assignment: prelab_assignment(),\n  background: background(),\n  procedure: procedure(),\n  results: results(),\n  study_questions: study_questions(),\n  discussion: discussion(),\n  waste_disposal: waste_disposal()\n};\n\nexport default Experiment_12;\n","import React from \"react\";\nimport Experiment_1 from \"./content/Experiment_1\";\nimport Experiment_2 from \"./content/Experiment_2\";\nimport Experiment_3 from \"./content/Experiment_3\";\nimport Experiment_4 from \"./content/Experiment_4\";\nimport Experiment_5 from \"./content/Experiment_5\";\nimport Experiment_6 from \"./content/Experiment_6\";\nimport Experiment_7 from \"./content/Experiment_7\";\nimport Experiment_8 from \"./content/Experiment_8\";\nimport Experiment_9 from \"./content/Experiment_9\";\nimport Experiment_10 from \"./content/Experiment_10\";\nimport Experiment_11 from \"./content/Experiment_11\";\nimport Experiment_12 from \"./content/Experiment_12\";\n\n\nconst contentMap = {\n  1: \"prelab_assignment\",\n  2: \"background\",\n  3: \"procedure\",\n  4: \"results\",\n  5: \"study_questions\",\n  6: \"discussion\",\n  7: \"waste_disposal\"\n};\n\nconst experimentMap = {\n  1: Experiment_1, 2: Experiment_2, 3: Experiment_3,\n  4: Experiment_4, 5: Experiment_5, 6: Experiment_6,\n  7: Experiment_7, 8: Experiment_8, 9: Experiment_9,\n  10: Experiment_10, 11: Experiment_11, 12: Experiment_12\n};\n\nconst Content = {\n  get: function(experimentId, contentId) {\n    const experiment = experimentMap[experimentId];\n    const contentType = contentMap[contentId];\n    const content = experiment[contentType];\n    return content;\n  }\n};\n\nexport { Content };\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n\n// Todo: Check length --> if only 1, don't return tabs.\n\nconst ExperimentProcedureTabs = ({\n  cardContent,\n  open,\n  cardId,\n  header,\n  setOpen,\n  iconToggle\n}) => {\n  const [key, setKey] = useState(\"home\");\n\n  const tabs = cardContent.map((content, index) => (\n    <Tab eventKey={index} title={\"Step \" + (index + 1)}>\n      <div style={{ marginTop: 25 }}>{content}</div>\n    </Tab>\n  ));\n\n  return (\n    <Card>\n      <Card.Header\n        onClick={() => setOpen(!open)}\n        aria-controls={cardId}\n        aria-expanded={open}\n        as=\"h2\"\n        className=\"bg-transparent\"\n      >\n        {header}\n        {iconToggle(open)}\n      </Card.Header>\n      <Collapse in={open}>\n        <div>\n          <Card.Body id={cardId}>\n            <Tabs fill justify activeKey={key} onSelect={k => setKey(k)}>\n              {tabs}\n            </Tabs>\n          </Card.Body>\n        </div>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default ExperimentProcedureTabs;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\nimport { Content, _Content } from \"../../ContentAPI\"\nimport ExperimentProcedureTabs from \"./ExperimentProcedureTabs\"\n\n/*\nExports to: ExperimentsCards.js\nCreates Cards: \n - Prelab Assignment \n - Theoretical Background,\n - Procedure\n - Results\n - Study Questions\n - Discussion\n - Waste Disposal\n*/\n\nconst iconToggle = (state) => {\n  const iconDown = <FontAwesomeIcon icon={faChevronDown} />\n  const iconUp = <FontAwesomeIcon icon={faChevronUp} />\n  return state ? iconUp : iconDown\n};\n\nconst ExperimentCard = ({ card, experiment }) => {\n  const header = card.header;\n  const cardId = card.cardId;\n  const experimentId = experiment.experimentID;\n  const contentId = card.Id;\n  const cardContent = Content.get(experimentId, contentId);\n  const [open, setOpen] = useState(false);\n\n\n  if (contentId == 3) {\n    return (\n      <ExperimentProcedureTabs\n        cardContent = {cardContent}\n        open={open}\n        cardId={cardId}\n        header={header}\n        setOpen={setOpen}\n        iconToggle={iconToggle}\n      />\n    );\n  }\n\n  return (\n    <Card>\n      <Card.Header\n        onClick={() => setOpen(!open)}\n        aria-controls={cardId}\n        aria-expanded={open}\n        as=\"h2\"\n        className=\"bg-transparent\"\n      >\n        {header}\n        {iconToggle(open)}\n      </Card.Header>\n      <Collapse in={open}>\n        <div>\n          <Card.Body id={cardId}>\n            {cardContent}\n          </Card.Body>\n        </div>\n      </Collapse>\n    </Card>\n  );\n};\n\n\nexport default ExperimentCard;","import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\n// Exports to: ExperimentsCards.js\n\n\n\nconst iconToggle = (state) => {\n  const iconDown = <FontAwesomeIcon icon={faChevronDown} />\n  const iconUp = <FontAwesomeIcon icon={faChevronUp} />\n  return state ? iconUp : iconDown\n};\n\n\nconst ExperimentChemicalsCard = ( { chemicals, pictogramMap } ) => {\n\tconst image_style = { height: \"3rem\" };\n\tconst cardID = \"chemicals-card-body\";\n\tconst [open, setOpen] = useState(false);\n\n\tconst imageElements = chemicalID => {\n\t  const pictograms = pictogramMap[chemicalID];\n\t  if (pictograms[0].pictogramID === 10) {\n\t    return null;\n\t  }\n\t  return pictograms.map(pictogram => (\n\t    <Card.Img \n\t    \tvariant = \"buttom\"\n\t    \tsrc = { require('../../assets/pictograms/' + pictogram.filename ) }\n\t    \tstyle = {image_style} />\n\t  ));\n\t};\n\n\tconst chemicalCard = chemicals.map((chemical, i) =>\n\t\t<React.Fragment>\n\t\t\t<Card.Title className=\"chem-card\"> {chemical.name} </Card.Title>\n\t\t\t<Card.Subtitle className=\"mb-2 text-muted\"> CAS #{chemical.cas} </Card.Subtitle>\n\t\t\t<Card.Text> {chemical.safety_guideline} </Card.Text>\n\t\t\t{imageElements(chemical.chemicalID)}\n\t\t\t<hr />\n\t\t</React.Fragment>\n\t);\n\n\treturn (\n\t\t<Card>\n\n\t\t\t<Card.Header \n\t\t\t\tonClick = {() => setOpen(!open)} \n\t\t\t\taria-controls = {cardID} \n\t\t\t\taria-expanded = {open} \n\t\t\t\tas = \"h2\"\n          \t\tclassName = \"bg-transparent\"\n\t\t\t>\n\t\t\t\tChemicals\n\t\t\t\t{iconToggle(open)}\n\t\t\t</Card.Header>\n\n\t\t\t<Collapse in = {open} >\n\t\t\t\t<div>\n\n\t\t\t\t\t<Card.Body id = {cardID} >\n\t\t\t\t\t{chemicalCard}\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</div>\n\t\t\t</Collapse>\n\t\t</Card>\n\t);\t\n}\n\nexport default ExperimentChemicalsCard;\n\n\n\n\n\n\n\n","import React, { useState } from \"react\";\nimport { CardsAPI, CoursesAPI, ExperimentsAPI, ChemicalsAPI, PictogramsAPI } from \"../../api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport ExperimentCard from \"./ExperimentCard\";\nimport ExperimentChemicalsCard from \"./ExperimentChemicalsCard\";\n// Exports: Experiment.js\n\nconst ExperimentCards = ({experiment}) => {\n  const _cards = CardsAPI.all();\n  const _chemicals = ChemicalsAPI.filtered(experiment.chemical_ids);\n  const _pictogramMap = PictogramsAPI.pictogramMap(_chemicals);\n\n  if (!experiment) {\n    return <div>Sorry, experiment not found.</div>;\n  }\n\n  const cards = _cards.map(card => (\n    <Container className=\"p-1\">\n      <ExperimentCard card = {card} experiment = {experiment} />\n    </Container>\n  ));\n\n  const ExpChemCard = (\n    <Container className=\"p-1\">\n      <ExperimentChemicalsCard  chemicals = {_chemicals} pictogramMap = {_pictogramMap} />\n    </Container>\n  );\n\n  cards.splice(0, 0, ExpChemCard); // Insert Chemicals card at 0 index\n\n  return (\n  <React.Fragment>\n      {cards}\n  </React.Fragment>\n  );\n};\n\nexport default ExperimentCards;","import React from \"react\";\nimport { CardsAPI, CoursesAPI, ExperimentsAPI, ChemicalsAPI, PictogramsAPI } from \"../../api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport ExperimentBreadcrumb from \"./ExperimentBreadcrumb\";\nimport ExperimentCards from \"./ExperimentCards\"\n\nconst Experiment = props => {\n  const _courseId = parseInt(props.match.params.id, 10);\n  const _course = CoursesAPI.get(_courseId)\n  const _experimentId = parseInt(props.match.params.experimentID, 10);\n  const _experiment = ExperimentsAPI.filtered(_courseId).find(exp => exp.experimentID == _experimentId)\n  \n  if (!_experiment) {\n    return <div>Sorry, experiment not found.</div>;\n  }\n\n  return (\n  <React.Fragment>\n    <ExperimentBreadcrumb experiment = {_experiment} course = {_course} />\n    <Container className=\"p-1\">\n      <h1> {_experiment.name} </h1>\n    </Container>\n    <ExperimentCards experiment = {_experiment} />\n  </React.Fragment>\n  );\n};\n\nexport default Experiment;","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Courses from './course/Courses'\nimport Course from './course/Course'\nimport Experiments from './experiment/Experiments'\nimport Experiment from './experiment/Experiment'\n\n\n// Route matching\n// if /courses --> return all\n// if /courses/:id --> return course, etc.\nconst Routes = () => (\n  <Switch>\n    <Route exact path='/courses' component={ Courses }/>\n    <Route exact path='/courses/:id' component={ Course }/>\n    <Route exact path='/courses/:id/experiments' component={ Experiments }/>\n    <Route exact path='/courses/:id/experiments/:experimentID' component={ Experiment }/>\n  </Switch>\n)\n\nexport default Routes","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './home/Home'\nimport Routes from './Routes'\n\n// Declare the entrypoint routes.\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component = { Home }/>\n      <Route path='/courses' component = { Routes }/>\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React from 'react'\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Container from \"react-bootstrap/Container\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport './callout.css'\n\nconst App = () => (\n  <Container >\n    <Header />\n    <Main />    \n  </Container>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}